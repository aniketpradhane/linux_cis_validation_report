---
 - name: CIS Validation
   hosts: all
   serial: 1
   sudo: yes


   tasks:
     
      - name: Host name
        local_action: shell echo "============================ CIS Report for {{ inventory_hostname }}====================================" >> file
        ignore_errors: yes
      
      - name: Ensure mounting of cramfs filesystems is disabled
        shell: /sbin/modprobe -n -v cramfs | grep -i 'install' | cut -d ' ' -f 1
        register: v1_out

      - debug:
          var: v1_out

      - name: Printinfo
        local_action: shell echo "Ensure mounting of cramfs filesystems is disabled,Yes" >> file
        when: v1_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of cramfs filesystems is disabled,No" >> file
        when: v1_out.stdout != "install"
########NewSet
      - name: Ensure mounting of freevxfs  filesystems is disabled
        shell: /sbin/modprobe -n -v freevxfs  | grep -i 'install' | cut -d ' ' -f 1
        register: v2_out
      - debug:
          var: v_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of freevxfs filesystems is disabled,Yes" >> file
        when: v2_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of freevxfs filesystems is disabled,No" >> file
        when: v2_out.stdout != "install"

      - name: Ensure mounting of jffs2  filesystems is disabled
        shell: /sbin/modprobe -n -v jffs2  | grep -i 'install' | cut -d ' ' -f 1
        register: v3_out
      - debug:
          var: v3_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of jffs2  filesystems is disabled,Yes" >> file
        when: v3_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of jffs2  filesystems is disabled,No" >> file
        when: v3_out.stdout != "install"

      - name: Ensure mounting of hfs   filesystems is disabled
        shell: /sbin/modprobe -n -v hfs | grep -i 'install' | cut -d ' ' -f 1
        register: v4_out
      - debug:
          var: v4_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfs   filesystems is disabled,Yes" >> file
        when: v4_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfs   filesystems is disabled,No" >> file
        when: v4_out.stdout != "install"  
  
      - name: Ensure mounting of hfsplus filesystems is disabled
        shell: /sbin/modprobe -n -v hfsplus | grep -i 'install' | cut -d ' ' -f 1
        register: v5_out
      - debug:
          var: v5_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfsplus filesystems is disabled,Yes" >> file
        when: v5_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfsplus filesystems is disabled,No" >> file
        when: v5_out.stdout != "install"
       
      - name: Ensure mounting of squashfs filesystems is disabled
        shell: /sbin/modprobe -n -v squashfs | grep -i 'install' | cut -d ' ' -f 1
        register: v6_out
      - debug:
          var: v6_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of squashfs  filesystems is disabled,Yes" >> file
        when: v6_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of squashfs  filesystems is disabled,No" >> file
        when: v6_out.stdout != "install"
      
      - name: Ensure mounting of udf  filesystems is disabled
        shell: /sbin/modprobe -n -v udf  | grep -i 'install' | cut -d ' ' -f 1
        register: v7_out
      - debug:
          var: v7_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of udf filesystems is disabled,Yes" >> file
        when: v7_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of udf filesystems is disabled,No" >> file
        when: v7_out.stdout != "install"

      - name: Ensure mounting of vfat filesystems is disabled
        shell: /sbin/modprobe -n -v vfat | grep -i 'install' | cut -d ' ' -f 1
        register: v8_out
      - debug:
          var: v8_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of vfat  filesystems is disabled,Yes" >> file
        when: v8_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of vfat filesystems is disabled,No" >> file
        when: v8_out.stdout != "install"
##########        
      - name: Ensure separate partition exists for /tmp
        shell: "grep '[[:space:]]/tmp[[:space:]]' /etc/fstab"
        register: tmp_out
        ignore_errors: yes
      - debug:
          var: tmp_out   
      - name: Printinfo
        local_action: shell echo " Ensure separate partition exists for /tmp,Yes" >> file
        when: tmp_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure separate partition exists for /tmp,No" >> file
        when: tmp_out.rc != 0 
      
      - name: Ensure separate partition exists for /tmp
        shell: " grep /tmp /etc/fstab | grep nodev"
        register: tmp1_out
        ignore_errors: yes
      - debug:
          var: tmp1_out
      - name: Printinfo
        local_action: shell echo "Set nodev,nosuid,noexec option for /tmp Partition,Yes" >> file
        when: tmp1_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Set nodev,nosuid,noexec option for /tmp Partition,No" >> file
        when: tmp1_out.rc != 0  

##############
      - name: Create Separate Partition for /var            
        shell: "grep '[[:space:]]/var[[:space:]]' /etc/fstab"
        register: var_out
        ignore_errors: yes
      - debug:
          var: var_out
      - name: Printinfo
        local_action: shell echo "Ensure Separate Partition for /var,Yes" >> file
        when: var_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure Separate Partition for /var,No" >> file
        when: var_out.rc != 0
#############################
      - name: Bind Mount the /var/tmp directory to /tmp
        shell: "grep -e '^/tmp' /etc/fstab | grep /var/tmp"
        register: tmp3_out
        ignore_errors: yes
      - debug:
          var: tmp3_out
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,Yes" >> file
        when: tmp3_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,No" >> file
        when: tmp3_out.rc != 0
#########################
      - name: Bind Mount the /var/tmp directory to /tmp
        shell: "grep -e '^/tmp' /etc/fstab | grep /var/tmp"
        register: tmp3_out
        ignore_errors: yes
      - debug:
          var: tmp3_out
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,Yes" >> file
        when: tmp3_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,No" >> file
        when: tmp3_out.rc != 0 
      - name: Ensure nodev option set on /tmp partition
        shell:  grep /tmp /etc/fstab | grep nodev
        register: tmp4_out
        ignore_errors: yes
      - debug:
          var: tmp4_out
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /tmp partition,Yes" >> file
        when: tmp4_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /tmp partition,No" >> file
        when: tmp4_out.rc != 0

      - name: Ensure noexec option set on /tmp partition
        shell:  grep /tmp /etc/fstab | grep noexec
        register: tmp5_out
        ignore_errors: yes
      - debug:
          var: tmp5_out
      - name: Printinfo
        local_action: shell echo "Ensure noexec option set on /tmp partition,Yes" >> file
        when: tmp5_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure noexec option set on /tmp partition,No" >> file
        when: tmp5_out.rc != 0
        

      - name: Ensure nosuid option set on /tmp partition
        shell:  grep /tmp /etc/fstab | grep nosuid
        register: tmp6_out
        ignore_errors: yes
      - debug:
          var: tmp6_out
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /tmp partition,Yes" >> file
        when: tmp6_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /tmp partition,No" >> file
        when: tmp6_out.rc != 0 

      - name: Ensure separate partition exists for /var/log 
        shell: "grep '[[:space:]]/var/log[[:space:]]' /etc/fstab"
        register: var2_out
        ignore_errors: yes
      - debug:
          var: var2_out
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log,Yes" >> file
        when: var2_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log,No" >> file
        when: var2_out.rc != 0

      - name: Ensure separate partition exists for /var/log/audit 
        shell:  "grep '[[:space:]]/var/log/audit[[:space:]]' /etc/fstab"
        register: var6_out
        ignore_errors: yes
      - debug:
          var: var6_out
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log/audit,Yes" >> file
        when: var6_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log/audit,No" >> file
        when: var6_out.rc != 0
        

      - name: Ensure separate partition exists for /home 
        shell: "grep '[[:space:]]/home[[:space:]]' /etc/fstab"
        register: var7_out
        ignore_errors: yes
      - debug:
          var: var7_out
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /home,Yes" >> file
        when: var7_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /home,No" >> file
        when: var7_out.rc != 0    
     
      - name: Ensure nodev option set on /home partition
        shell:  grep /home /etc/fstab | grep nodev
        register: var8_out
        ignore_errors: yes
      - debug:
          var: var8_out
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /home partition,Yes" >> file
        when: var8_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /home partition,No" >> file
        when: var8_out.rc != 0

      - name: Ensure nodev option set on /run/shm partition 
        shell:   grep /run/shm /etc/fstab | grep nodev
        register: var9_out
        ignore_errors: yes
      - debug:
          var: var9_out
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /run/shm partition,Yes" >> file
        when: var9_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /run/shm partition,No" >> file
        when: var9_out.rc != 0
        

      - name: Ensure nosuid option set on /run/shm partition 
        shell:  grep /run/shm /etc/fstab | grep nosuid
        register: var10_out
        ignore_errors: yes
      - debug:
          var: var10_out
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /run/shm partition,Yes" >> file
        when: var10_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /run/shm partition,No" >> file
        when: var10_out.rc != 0       
#####################
      - name: Ensure sticky bit is set on all world-writable directories 
        shell:  df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \)
        register: var11_out
        ignore_errors: yes
      - debug:
          var: var11_out
      - name: Printinfo
        local_action: shell echo "Ensure sticky bit is set on all world-writable directories,Yes" >> file
        when: var11_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure sticky bit is set on all world-writable directories,No" >> file
        when: var11_out.rc != 0

      - name: Disable Automounting 
        shell:  initctl show-config autofs
        register: var12_out
        ignore_errors: yes
      - debug:
          var: var12_out
      - name: Printinfo
        local_action: shell echo "Disable Automounting,Yes" >> file
        when: var12_out.rc != 0
      - name: Printinfo
        local_action: shell echo "Disable Automounting,No" >> file
        when: var12_out.rc == 0    
      
      - name: Ensure AIDE is installed 
        shell:  dpkg -s aide 
        register: var13_out
        ignore_errors: yes
      - debug:
          var: var13_out
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed,Yes" >> file
        when: var13_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed,No" >> file
        when: var13_out.rc != 0   
     
      - name: Ensure AIDE is installed | DB validate
        shell:  "ls -lart /var/lib/aide/aide.db.new"
        register: var14_out
        ignore_errors: yes
      - debug:
          var: var14_out
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed | DB validate,Yes" >> file
        when: var14_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed | DB validate,No" >> file
        when: var14_out.rc != 0  
 
      - name: Ensure filesystem integrity is regularly checked
        shell:  "crontab -u root -l | grep aide"
        register: var15_out
        ignore_errors: yes
      - debug:
          var: var15_out
      - name: Printinfo
        local_action: shell echo "Ensure filesystem integrity is regularly checked,Yes" >> file
        when: var15_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure filesystem integrity is regularly checked,No" >> file
        when: var15_out.rc != 0

      - name: Ensure permissions on bootloader config are configured
        shell:  'stat -L -c "%u %g" /boot/grub/grub.cfg | egrep "0 0"'
        register: var16_out
        ignore_errors: yes
      - debug:
          var: var16_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on bootloader config are configured,Yes" >> file
        when: var16_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on bootloader config are configured,No" >> file
        when: var16_out.rc != 0

      - name: Ensure permissions on bootloader config are configured
        shell:  'stat -L -c "%a" /boot/grub/grub.cfg | egrep ".00"'
        register: var17_out
        ignore_errors: yes
      - debug:
          var: var17_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on bootloader config are configured,Yes" >> file
        when: var17_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on bootloader config are configured,No" >> file
        when: var17_out.rc != 0      

      - name: Ensure bootloader password is set
        shell:  'grep "^set superusers" /boot/grub/grub.cfg'
        register: var18_out
        ignore_errors: yes
      - debug:
          var: var18_out
      - name: Printinfo
        local_action: shell echo "Ensure bootloader password is set,Yes" >> file
        when: var18_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure bootloader password is set,No" >> file
        when: var18_out.rc != 0

      - name: Ensure authentication required for single user mode
        shell:  'grep ^root:[*\!]: /etc/shadow'
        register: var19_out
        ignore_errors: yes
      - debug:
          var: var19_out
      - name: Printinfo
        local_action: shell echo "Ensure authentication required for single user mode,No" >> file
        when: var19_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure authentication required for single user mode,Yes" >> file
        when: var19_out.rc != 0  
      
      - name: Ensure core dumps are restricted
        shell:  'grep "* hard core 0" /etc/security/limits.conf'
        register: var20_out
        ignore_errors: yes
      - debug:
          var: var20_out
      - name: Printinfo
        local_action: shell echo "Ensure core dumps are restricted,Yes" >> file
        when: var20_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure core dumps are restricted,No" >> file
        when: var20_out.rc != 0

      - name: Ensure core dumps are restricted
        shell:  sysctl fs.suid_dumpable |grep 0
        register: var21_out
        ignore_errors: yes
      - debug:
          var: var21_out
      - name: Printinfo
        local_action: shell echo "Ensure core dumps are restricted,Yes" >> file
        when: var21_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure core dumps are restricted,No" >> file
        when: var21_out.rc != 0   
      
      - name: Ensure XD/NX support is enabled
        shell:  'dmesg | grep NX'
        register: var22_out
        ignore_errors: yes
      - debug:
          var: var22_out
      - name: Printinfo
        local_action: shell echo "Ensure XD/NX support is enabled,Yes" >> file
        when: var22_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure XD/NX support is enabled,No" >> file
        when: var22_out.rc != 0  

      - name: Ensure address space layout randomization (ASLR) is enabled 
        shell:  'sysctl kernel.randomize_va_space | grep 2'
        register: var23_out
        ignore_errors: yes
      - debug:
          var: var23_out
      - name: Printinfo
        local_action: shell echo "Ensure address space layout randomization (ASLR) is enabled ,Yes" >> file
        when: var23_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure address space layout randomization (ASLR) is enabled ,No" >> file
        when: var23_out.rc != 0

      - name:  Ensure prelink is disabled
        shell:  dpkg -s prelink
        register: var24_out
        ignore_errors: yes
      - debug:
          var: var24_out
      - name: Printinfo
        local_action: shell echo " Ensure prelink is disabled,No" >> file
        when: var24_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure prelink is disabled,Yes" >> file
        when: var24_out.rc != 0   

      - name:  Ensure SELinux is not disabled in bootloader configuration and enable selinux enforcing
        shell:  'grep SELINUX=enforcing /etc/selinux/config'
        register: var25_out
        ignore_errors: yes
      - debug:
          var: var25_out
      - name: Printinfo
        local_action: shell echo "Ensure SELinux is not disabled in bootloader configuration and enable selinux enforcing,Yes" >> file
        when: var25_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SELinux is not disabled in bootloader configuration and enable selinux enforcing,No" >> file
        when: var25_out.rc != 0   
      
      - name: Ensure AppArmor are installed
        shell:  'apparmor_status'
        register: var27_out
        ignore_errors: yes
      - debug:
          var: var27_out
      - name: Printinfo
        local_action: shell echo "Ensure AppArmor are installed ,Yes" >> file
        when: var27_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure AppArmor are installed ,No" >> file
        when: var27_out.rc != 0

      - name: Ensure permissions on Permision on motd file
        shell: '/bin/ls -l /etc/motd | grep "^-rw-r--r--"'
        register: var28_out
        ignore_errors: yes
      - debug:
          var: var28_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on motd file,Yes" >> file
        when: var28_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on motd file,No" >> file
        when: var28_out.rc != 0  

      
      - name: Ensure permissions on Permision on issue file
        shell: '/bin/ls -l /etc/issue | grep "^-rw-r--r--"'
        register: var29_out
        ignore_errors: yes
      - debug:
          var: var29_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on issue file,Yes" >> file
        when: var29_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on issue file,No" >> file
        when: var29_out.rc != 0  


      - name: Ensure permissions on Permision on issue.net file
        shell: '/bin/ls -l /etc/issue.net | grep "^-rw-r--r--"'
        register: var30_out
        ignore_errors: yes
      - debug:
          var: var30_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on issue.net file,Yes" >> file
        when: var30_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on issue.net file,No" >> file
        when: var30_out.rc != 0 


      - name: Ensure local login warning banner is configured properly | remove os info
        shell:  "grep -e '(\\v|\\r|\\m|\\s)' /etc/motd"
        register: var31_out
        ignore_errors: yes
      - debug:
          var: var31_out
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info ,Yes" >> file
        when: var31_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,No" >> file
        when: var31_out.rc != 0

      - name: Ensure local login warning banner is configured properly | remove os info
        shell: "grep -e '(\\v|\\r|\\m|\\s)' /etc/issue"
        register: var32_out
        ignore_errors: yes
      - debug:
          var: var32_out
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,Yes" >> file
        when: var32_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,No" >> file
        when: var32_out.rc != 0  

      
      - name: Ensure local login warning banner is configured properly | remove os info
        shell: "grep -e '(\\v|\\r|\\m|\\s)' /etc/issue.net"
        register: var33_out
        ignore_errors: yes
      - debug:
          var: var33_out
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,Yes" >> file
        when: var33_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,No" >> file
        when: var33_out.rc != 0   

      - name: Ensure ntp is Installed
        shell:  "dpkg -s ntp"
        register: var34_out
        ignore_errors: yes
      - debug:
          var: var34_out
      - name: Printinfo
        local_action: shell echo "Ensure ntp is Installed,Yes" >> file
        when: var34_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ntp is Installed,No" >> file
        when: var34_out.rc != 0

      - name: Ensure ntp is configured
        shell: 'grep "restrict .* default" /etc/ntp.conf'
        register: var35_out
        ignore_errors: yes
      - debug:
          var: var35_out
      - name: Printinfo
        local_action: shell echo "Ensure ntp is configured,Yes" >> file
        when: var35_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ntp is configured,No" >> file
        when: var35_out.rc != 0 
      
      - name: Ensure X Window System is not installed
        shell:  "dpkg -l xserver-xorg-core"
        register: var36_out
        ignore_errors: yes
      - debug:
          var: var36_out
      - name: Printinfo
        local_action: shell echo "Ensure X Window System is not installed,Yes" >> file
        when: var36_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure X Window System is not installed,No" >> file
        when: var36_out.rc != 0

      - name: Ensure Avahi Server is not enabled
        shell: 'grep ^start /etc/init/avahi-daemon.conf'
        register: var37_out
        ignore_errors: yes
      - debug:
          var: var37_out
      - name: Printinfo
        local_action: shell echo "Ensure Avahi Server is not enabled,Yes" >> file
        when: var37_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure Avahi Server is not enabled,No" >> file
        when: var37_out.rc != 0  

      - name: Ensure CUPS is not enabled
        shell: 'grep ^start /etc/init/cups.conf'
        register: var38_out
        ignore_errors: yes
      - debug:
          var: var38_out
      - name: Printinfo
        local_action: shell echo "Ensure CUPS is not enabled,Yes" >> file
        when: var38_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure CUPS is not enabled,No" >> file
        when: var38_out.rc != 0
  
      - name: Ensure DHCP Server is not enabled
        shell: 'grep ^start /etc/init/isc-dhcp-server.conf'
        register: var39_out
        ignore_errors: yes
      - debug:
          var: var39_out
      - name: Printinfo
        local_action: shell echo "Ensure DHCP Server is not enabled,Yes" >> file
        when: var39_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure DHCP Server is not enabled,No" >> file
        when: var39_out.rc != 0


      
      - name: Ensure DHCP Server is not enabled
        shell: 'grep ^start /etc/init/isc-dhcp-server6.conf'
        register: var40_out
        ignore_errors: yes
      - debug:
          var: var40_out
      - name: Printinfo
        local_action: shell echo "Ensure DHCP Server is not enabled,Yes" >> file
        when: var40_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure DHCP Server is not enabled,No" >> file
        when: var40_out.rc != 0



      - name: Ensure LDAP server is not enabled
        shell: 'dpkg -s slapd'
        register: var41_out
        ignore_errors: yes
      - debug:
          var: var41_out
      - name: Printinfo
        local_action: shell echo "Ensure LDAP server is not enabled,Yes" >> file
        when: var41_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure LDAP server is not enabled,No" >> file
        when: var41_out.rc != 0  

      
      - name:  Ensure NFS and RPC are not enabled 
        shell: 'ls /etc/rc*.d/S*nfs-kernel-server'
        register: var42_out
        ignore_errors: yes
      - debug:
          var: var42_out
      - name: Printinfo
        local_action: shell echo "Ensure NFS and RPC are not enabled ,Yes" >> file
        when: var42_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure NFS and RPC are not enabled ,No" >> file
        when: var42_out.rc != 0  

      
      - name: Ensure DNS Server is not enabled 
        shell: 'ls /etc/rc*.d/S*bind9'
        register: var43_out
        ignore_errors: yes
      - debug:
          var: var43_out
      - name: Printinfo
        local_action: shell echo "Ensure NFS and RPC are not enabled ,Yes" >> file
        when: var43_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure NFS and RPC are not enabled ,No" >> file
        when: var43_out.rc != 0  

      
      - name:  Ensure FTP Server is not enabled 
        shell: 'grep ^start /etc/init/vsftpd.conf'
        register: var44_out
        ignore_errors: yes
      - debug:
          var: var44_out
      - name: Printinfo
        local_action: shell echo " Ensure FTP Server is not enabled,Yes" >> file
        when: var44_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure FTP Server is not enabled,No" >> file
        when: var44_out.rc != 0   

      - name:  Ensure HTTP server is not enabled
        shell: 'ls /etc/rc*.d/S*apache2'
        register: var45_out
        ignore_errors: yes
      - debug:
          var: var45_out
      - name: Printinfo
        local_action: shell echo "Ensure HTTP server is not enabled,Yes" >> file
        when: var45_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure HTTP server is not enabled,No" >> file
        when: var45_out.rc != 0 


      - name:  Ensure IMAP and POP3 server is not enabled
        shell: 'grep ^start /etc/init/dovecot.conf'
        register: var46_out
        ignore_errors: yes
      - debug:
          var: var46_out
      - name: Printinfo
        local_action: shell echo "Ensure IMAP and POP3 server is not enabled,Yes" >> file
        when: var46_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure IMAP and POP3 server is not enabled,No" >> file
        when: var46_out.rc != 0 


      - name:  Ensure Samba is not enabled
        shell: 'grep ^start /etc/init/smbd.conf'
        register: var47_out
        ignore_errors: yes
      - debug:
          var: var47_out
      - name: Printinfo
        local_action: shell echo "Ensure Samba is not enabled,Yes" >> file
        when: var47_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure Samba is not enabled,No" >> file
        when: var47_out.rc != 0   


      - name:  Ensure HTTP Proxy Server is not enabled
        shell: 'grep ^start /etc/init/squid3.conf'
        register: var48_out
        ignore_errors: yes
      - debug:
          var: var48_out
      - name: Printinfo
        local_action: shell echo "Ensure HTTP Proxy Server is not enabled,Yes" >> file
        when: var48_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure HTTP Proxy Server is not enabled,No" >> file
        when: var48_out.rc != 0  

      - name:  Ensure SNMP Server is not enabled
        shell: 'ls /etc/rc*.d/S*snmpd'
        register: var49_out
        ignore_errors: yes
      - debug:
          var: var49_out
      - name: Printinfo
        local_action: shell echo "Ensure SNMP Server is not enabled,Yes" >> file
        when: var49_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SNMP Server is not enabled,No" >> file
        when: var49_out.rc != 0    
      
      - name: Ensure mail transfer agent is configured for local-only mode | install postfix
        shell: 'dpkg -s postfix'
        register: var50_out
        ignore_errors: yes
      - debug:
          var: var50_out
      - name: Printinfo
        local_action: shell echo "Ensure mail transfer agent is configured for local-only mode | install postfix,Yes" >> file
        when: var50_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure mail transfer agent is configured for local-only mode | install postfix,No" >> file
        when: var50_out.rc != 0


      - name: Ensure mail transfer agent is configured for local-only mode | file check
        shell: 'netstat -an | grep LIST | grep ":25[[:space:]]"'
        register: var51_out
        ignore_errors: yes
      - debug:
          var: var51_out
      - name: Printinfo
        local_action: shell echo "Ensure mail transfer agent is configured for local-only mode | file check,Yes" >> file
        when: var51_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure mail transfer agent is configured for local-only mode | file check,No" >> file
        when: var51_out.rc != 0


      - name:  Ensure rsh server is not enabled | rsh.socket
        shell: 'grep ^shell /etc/inetd.conf'
        register: var52_out
        ignore_errors: yes
      - debug:
          var: var52_out
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rsh.socket,No" >> file
        when: var52_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rsh.socket,Yes" >> file
        when: var52_out.rc != 0


      
      - name: Ensure rsh server is not enabled | rlogin.socket
        shell: 'grep ^login /etc/inetd.conf'
        register: var53_out
        ignore_errors: yes
      - debug:
          var: var53_out
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rlogin.socket,No" >> file
        when: var53_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rlogin.socket,Yes" >> file
        when: var53_out.rc != 0


      - name: Ensure rsh server is not enabled | rexec.socket
        shell: 'grep ^exec /etc/inetd.conf'
        register: var54_out
        ignore_errors: yes
      - debug:
          var: var54_out
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rexec.socket,No" >> file
        when: var54_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rexec.socket,Yes" >> file
        when: var54_out.rc != 0

      - name: Ensure NIS Server is not enabled
        shell: 'dpkg -s nis'
        register: var55_out
        ignore_errors: yes
      - debug:
          var: var55_out
      - name: Printinfo
        local_action: shell echo "Ensure NIS Server is not enabled,Yes" >> file
        when: var55_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure NIS Server is not enabled,No" >> file
        when: var55_out.rc != 0

  

      - name:  Ensure telnet server is not enabled
        shell: 'grep ^telnet /etc/inetd.conf'
        register: var56_out
        ignore_errors: yes
      - debug:
          var: var56_out
      - name: Printinfo
        local_action: shell echo "Ensure telnet server is not enabled,No" >> file
        when: var56_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure telnet server is not enabled,Yes" >> file
        when: var56_out.rc != 0


      - name: Ensure tftp server is not enabled
        shell: 'grep ^tftp /etc/inetd.conf'
        register: var57_out
        ignore_errors: yes
      - debug:
          var: var57_out
      - name: Printinfo
        local_action: shell echo "Ensure tftp server is not enabled,No" >> file
        when: var57_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure tftp server is not enabled,Yes" >> file
        when: var57_out.rc != 0

      - name: Ensure rsync service is not enabled
        shell: 'grep ^RSYNC_ENABLE=false /etc/default/rsync'
        register: var58_out
        ignore_errors: yes
      - debug:
          var: var58_out
      - name: Printinfo
        local_action: shell echo "Ensure rsync service is not enabled,Yes" >> file
        when: var58_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsync service is not enabled,No" >> file
        when: var58_out.rc != 0


      - name:  Ensure talk service is not enabled
        shell: 'grep ^talk /etc/inetd.conf'
        register: var59_out
        ignore_errors: yes
      - debug:
          var: var59_out
      - name: Printinfo
        local_action: shell echo "Ensure talk service is not enabled,No" >> file
        when: var59_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure talk service is not enabled,Yes" >> file
        when: var59_out.rc != 0 


      - name: Ensure NIS Server is not enabled
        shell: 'dpkg -s nis-client'
        register: var60_out
        ignore_errors: yes
      - debug:
          var: var60_out
      - name: Printinfo
        local_action: shell echo "Ensure NIS client is not enabled,Yes" >> file
        when: var60_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure NIS client is not enabled,No" >> file
        when: var60_out.rc != 0   

     
      - name: Ensure rsh-client is not enabled
        shell: ' dpkg -s rsh-client'
        register: var60_out
        ignore_errors: yes
      - debug:
          var: var60_out
      - name: Printinfo
        local_action: shell echo "Ensure rsh-client is not enabled,Yes" >> file
        when: var60_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsh-client is not enabled,No" >> file
        when: var60_out.rc != 0   

      - name: Ensure talk client is not enabled
        shell: 'dpkg -s talk'
        register: var61_out
        ignore_errors: yes
      - debug:
          var: var61_out
      - name: Printinfo
        local_action: shell echo "Ensure talk client is not enabled,Yes" >> file
        when: var61_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure talk client is not enabled,No" >> file
        when: var61_out.rc != 0

      - name: Ensure telnet client is not enabled
        shell: 'dpkg -s telnet'
        register: var62_out
        ignore_errors: yes
      - debug:
          var: var62_out
      - name: Printinfo
        local_action: shell echo "Ensure telnet client is not enabled,Yes" >> file
        when: var62_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure telnet client is not enabled,No" >> file
        when: var62_out.rc != 0

      - name: Ensure ldap client is not enabled
        shell: 'dpkg -s ldap-utils'
        register: var63_out
        ignore_errors: yes
      - debug:
          var: var63_out
      - name: Printinfo
        local_action: shell echo "Ensure ldap client is not enabled,Yes" >> file
        when: var63_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ldap client is not enabled,No" >> file
        when: var63_out.rc != 0   


      - name: Ensure IP forwarding is disabled
        shell: 'grep -E "net.ipv4.ip_forward=0" /etc/sysctl.conf'
        register: var64_out
        ignore_errors: yes
      - debug:
          var: var64_out
      - name: Printinfo
        local_action: shell echo "Ensure IP forwarding is disabled,Yes" >> file
        when: var64_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure IP forwarding is disabled,No" >> file
        when: var64_out.rc != 0      


      - name: Ensure packet redirect sending is disabled
        shell: 'grep -E "net.ipv4.conf.all.send_redirects=0|net.ipv4.conf.default.send_redirects=0" /etc/sysctl.conf'
        register: var65_out
        ignore_errors: yes
      - debug:
          var: var65_out
      - name: Printinfo
        local_action: shell echo "Ensure packet redirect sending is disabled,Yes" >> file
        when: var65_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure packet redirect sending is disabled,No" >> file
        when: var65_out.rc != 0 

      - name: Ensure source routed packets are not accepted
        shell: 'grep -E "net.ipv4.conf.all.accept_source_route=0|net.ipv4.conf.default.accept_source_route=0" /etc/sysctl.conf'
        register: var66_out
        ignore_errors: yes
      - debug:
          var: var66_out
      - name: Printinfo
        local_action: shell echo "Ensure source routed packets are not accepted,Yes" >> file
        when: var66_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure source routed packets are not accepted,No" >> file
        when: var66_out.rc != 0 

      - name: Ensure ICMP redirects are not accepted
        shell: 'grep -E "net.ipv4.conf.all.accept_redirects=0|net.ipv4.conf.default.accept_redirects=0" /etc/sysctl.conf'
        register: var67_out
        ignore_errors: yes
      - debug:
          var: var67_out
      - name: Printinfo
        local_action: shell echo "Ensure ICMP redirects are not accepted,Yes" >> file
        when: var67_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ICMP redirects are not accepted,No" >> file
        when: var67_out.rc != 0

      - name:  Ensure secure ICMP redirects are not accepted
        shell: 'grep -E "net.ipv4.conf.all.secure_redirects=0|net.ipv4.conf.default.secure_redirects=0" /etc/sysctl.conf'
        register: var68_out
        ignore_errors: yes
      - debug:
          var: var68_out
      - name: Printinfo
        local_action: shell echo "Ensure ICMP redirects are not accepted,Yes" >> file
        when: var68_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ICMP redirects are not accepted,No" >> file
        when: var68_out.rc != 0

      - name:  Ensure suspicious packets are logged 
        shell: 'grep -E "net.ipv4.conf.all.log_martians=1|net.ipv4.conf.default.log_martians=1" /etc/sysctl.conf'
        register: var69_out
        ignore_errors: yes
      - debug:
          var: var69_out
      - name: Printinfo
        local_action: shell echo "Ensure suspicious packets are logged,Yes" >> file
        when: var69_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure suspicious packets are logged,No" >> file
        when: var69_out.rc != 0        

      - name: Ensure broadcast ICMP requests are ignored 
        shell: 'grep -E "net.ipv4.icmp_echo_ignore_broadcasts=1" /etc/sysctl.conf'
        register: var70_out
        ignore_errors: yes
      - debug:
          var: var70_out
      - name: Printinfo
        local_action: shell echo "Ensure broadcast ICMP requests are ignored,Yes" >> file
        when: var70_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure broadcast ICMP requests are ignored,No" >> file
        when: var70_out.rc != 0    
    


      - name: Ensure bogus ICMP responses are ignored 
        shell: 'grep -E "net.ipv4.icmp_ignore_bogus_error_responses=1" /etc/sysctl.conf'
        register: var71_out
        ignore_errors: yes
      - debug:
          var: var71_out
      - name: Printinfo
        local_action: shell echo "Ensure bogus ICMP responses are ignored,Yes" >> file
        when: var71_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure bogus ICMP responses are ignored,No" >> file
        when: var71_out.rc != 0 
      
      - name: Ensure Reverse Path Filtering is enabled 
        shell: 'grep -E "net.ipv4.conf.all.rp_filter=1|net.ipv4.conf.default.rp_filter=1" /etc/sysctl.conf'
        register: var72_out
        ignore_errors: yes
      - debug:
          var: var72_out
      - name: Printinfo
        local_action: shell echo "Ensure Reverse Path Filtering is enabled,Yes" >> file
        when: var72_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure Reverse Path Filtering is enabled,No" >> file
        when: var72_out.rc != 0         


      - name: Ensure TCP SYN Cookies is enabled
        shell: 'grep -E "net.ipv4.tcp_syncookies=1" /etc/sysctl.conf'
        register: var73_out
        ignore_errors: yes
      - debug:
          var: var73_out
      - name: Printinfo
        local_action: shell echo "Ensure TCP SYN Cookies is enabled,Yes" >> file
        when: var73_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure TCP SYN Cookies is enabled,No" >> file
        when: var73_out.rc != 0


      - name: Ensure IPv6 router advertisements are not accepted 
        shell: 'grep -E "net.ipv6.conf.all.accept_ra=0|net.ipv6.conf.default.accept_ra=0" /etc/sysctl.conf'
        register: var74_out
        ignore_errors: yes
      - debug:
          var: var74_out
      - name: Printinfo
        local_action: shell echo "Ensure IPv6 router advertisements are not accepted,Yes" >> file
        when: var74_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure IPv6 router advertisements are not accepted,No" >> file
        when: var74_out.rc != 0


      - name: Ensure IPv6 redirects are not accepted 
        shell: 'grep -E "net.ipv6.conf.all.accept_redirects=0|net.ipv6.conf.default.accept_redirects=0" /etc/sysctl.conf'
        register: var75_out
        ignore_errors: yes
      - debug:
          var: var75_out
      - name: Printinfo
        local_action: shell echo "Ensure IPv6 redirects are not accepted,Yes" >> file
        when: var75_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure IPv6 redirects are not accepted,No" >> file
        when: var75_out.rc != 0


      - name: Ensure IPv6 is disabled
        shell: 'grep -E "net.ipv6.conf.all.disable_ipv6=1|net.ipv6.conf.default.disable_ipv6=1|net.ipv6.conf.lo.disable_ipv6=1" /etc/sysctl.conf'
        register: var76_out
        ignore_errors: yes
      - debug:
          var: var76_out
      - name: Printinfo
        local_action: shell echo "Ensure IPv6 is disabled,Yes" >> file
        when: var76_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure IPv6 is disabled,No" >> file
        when: var76_out.rc != 0

      - name: Ensure TCP Wrappers is installed
        shell: 'dpkg -s tcpd'
        register: var77_out
        ignore_errors: yes
      - debug:
          var: var77_out
      - name: Printinfo
        local_action: shell echo "Ensure TCP Wrappers is installed,Yes" >> file
        when: var77_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure TCP Wrappers is installed,No" >> file
        when: var77_out.rc != 0


      - name: Ensure /etc/hosts.allow is configured
        shell: 'ls -lart /etc/hosts.allow'
        register: var78_out
        ignore_errors: yes
      - debug:
          var: var78_out
      - name: Printinfo
        local_action: shell echo "Ensure /etc/hosts.allow is configured,Yes" >> file
        when: var78_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure /etc/hosts.allow is configured,No" >> file
        when: var78_out.rc != 0  


      - name: Ensure /etc/hosts.deny is configured
        shell: 'ls -lart /etc/hosts.deny'
        register: var79_out
        ignore_errors: yes
      - debug:
          var: var79_out
      - name: Printinfo
        local_action: shell echo "Ensure /etc/hosts.deny is configured,Yes" >> file
        when: var79_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure /etc/hosts.deny is configured,No" >> file
        when: var79_out.rc != 0  

      - name: Ensure permissions on /etc/hosts.allow are configured
        shell: '/bin/ls -l /etc/hosts.allow | grep "\-rw\-r\-\-r\-\-"'
        register: var80_out
        ignore_errors: yes
      - debug:
          var: var80_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/hosts.allow are configured,Yes" >> file
        when: var80_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/hosts.allow are configured,No" >> file
        when: var80_out.rc != 0 
      

      - name:  Ensure permissions on /etc/hosts.deny are configured
        shell: '/bin/ls -l /etc/hosts.deny | grep "\-rw\-r\-\-r\-\-"'
        register: var81_out
        ignore_errors: yes
      - debug:
          var: var81_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/hosts.deny are configured,Yes" >> file
        when: var81_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/hosts.deny are configured,No" >> file
        when: var81_out.rc != 0       
     
          
      - name: Ensures /etc/modprobe.d/ exists
        shell: '/bin/ls -l /etc/modprobe.d/'
        register: var82_out
        ignore_errors: yes
      - debug:
          var: var82_out
      - name: Printinfo
        local_action: shell echo "Ensures /etc/modprobe.d/ exists,Yes" >> file
        when: var82_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensures /etc/modprobe.d/ exists,No" >> file
        when: var82_out.rc != 0 


      - name: Disable DCCP
        shell: 'grep -w "install dccp /bin/true" /etc/modprobe.d/CIS.conf'
        register: var83_out
        ignore_errors: yes
      - debug:
          var: var83_out
      - name: Printinfo
        local_action: shell echo "Disable DCCP,Yes" >> file
        when: var83_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Disable DCCP,No" >> file
        when: var83_out.rc != 0    

      - name: Disable SCTP
        shell: 'grep -w "install sctp /bin/true" /etc/modprobe.d/CIS.conf'
        register: var84_out
        ignore_errors: yes
      - debug:
          var: var84_out
      - name: Printinfo
        local_action: shell echo "Disable SCTP,Yes" >> file
        when: var84_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Disable SCTP,No" >> file
        when: var84_out.rc != 0 

      - name: Disable RDS
        shell: 'grep -w "install rds /bin/true" /etc/modprobe.d/CIS.conf'
        register: var85_out
        ignore_errors: yes
      - debug:
          var: var85_out
      - name: Printinfo
        local_action: shell echo "Disable RDS,Yes" >> file
        when: var85_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Disable RDS,No" >> file
        when: var85_out.rc != 0        

      - name:  Disable TIPC
        shell: 'grep -w "install tipc /bin/true" /etc/modprobe.d/CIS.conf'
        register: var86_out
        ignore_errors: yes
      - debug:
          var: var86_out
      - name: Printinfo
        local_action: shell echo "Disable TIPC,Yes" >> file
        when: var86_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Disable TIPC,No" >> file
        when: var86_out.rc != 0 


      - name:  Ensure iptables is installed 
        shell: 'iptables -L'
        register: var87_out
        ignore_errors: yes
      - debug:
          var: var87_out
      - name: Printinfo
        local_action: shell echo "Ensure iptables is installed,Yes" >> file
        when: var87_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure iptables is installed,No" >> file
        when: var87_out.rc != 0 

      - name: Ensure wireless interfaces are disabled 
        shell: 'find /lib/modules/$(uname -r)/kernel/drivers/net/wireless -name "*.ko"'
        register: var88_out
        ignore_errors: yes
      - debug:
          var: var88_out
      - name: Printinfo
        local_action: shell echo "Ensure wireless interfaces are disabled,Yes" >> file
        when: var88_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure wireless interfaces are disabled,No" >> file
        when: var88_out.rc != 0

      - name: Ensure auditd installed
        shell: 'dpkg -s auditd'
        register: var89_out
        ignore_errors: yes
      - debug:
          var: var89_out
      - name: Printinfo
        local_action: shell echo "Ensure auditd installed,Yes" >> file
        when: var89_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure auditd installed,No" >> file
        when: var89_out.rc != 0
      

      - name: Ensure audit log storage size is configured
        shell: 'grep "max_log_file = 10" /etc/audit/auditd.conf'
        register: var90_out
        ignore_errors: yes
      - debug:
          var: var90_out
      - name: Printinfo
        local_action: shell echo "Ensure audit log storage size is configured,Yes" >> file
        when: var90_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure audit log storage size is configured,No" >> file
        when: var90_out.rc != 0  
       

      - name:  Ensure system is disabled when audit logs are full
        shell: 'grep -w "space_left_action = email" -w "action_mail_acct = root" -w "admin_space_left_action = halt" /etc/audit/auditd.conf'
        register: var91_out
        ignore_errors: yes
      - debug:
          var: var91_out
      - name: Printinfo
        local_action: shell echo " Ensure system is disabled when audit logs are full,Yes" >> file
        when: var91_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure system is disabled when audit logs are full,No" >> file
        when: var91_out.rc != 0


      - name: Ensure audit logs are not automatically deleted
        shell: 'grep -w "max_log_file_action = keep_logs" /etc/audit/auditd.conf'
        register: var92_out
        ignore_errors: yes
      - debug:
          var: var92_out
      - name: Printinfo
        local_action: shell echo "Ensure audit logs are not automatically deleted,Yes" >> file
        when: var92_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure audit logs are not automatically deleted,No" >> file
        when: var92_out.rc != 0
  
      - name: Ensure auditing for processes that start prior to auditd is enabled
        shell: 'grep -w "GRUB_CMDLINE_LINUX="audit=1"" /etc/default/grub'
        register: var93_out
        ignore_errors: yes
      - debug:
          var: var93_out
      - name: Printinfo
        local_action: shell echo "Ensure auditing for processes that start prior to auditd is enabled,Yes" >> file
        when: var93_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure auditing for processes that start prior to auditd is enabled,No" >> file
        when: var93_out.rc != 0   
     
          
      - name: Configure audit.logs 1
        shell: 'grep time-change /etc/audit/audit.rules'
        register: var94_out
        ignore_errors: yes
      - debug:
          var: var94_out
      - name: Printinfo
        local_action: shell echo "Configure audit.logs  time change,Yes" >> file
        when: var94_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Configure audit.logs  time change,No" >> file
        when: var94_out.rc != 0 


      - name: Configure audit.logs 2
        shell: 'grep identity /etc/audit/audit.rules'
        register: var95_out
        ignore_errors: yes
      - debug:
          var: var95_out
      - name: Printinfo
        local_action: shell echo "Configure audit.logs identity,Yes" >> file
        when: var95_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Configure audit.logs identity,No" >> file
        when: var95_out.rc != 0    

      - name: Configure audit.logs 3
        shell: 'grep system-locale /etc/audit/audit.rules'
        register: var96_out
        ignore_errors: yes
      - debug:
          var: var96_out
      - name: Printinfo
        local_action: shell echo "Configure audit.logs system-locale,Yes" >> file
        when: var96_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Configure audit.logs system-locale,No" >> file
        when: var96_out.rc != 0 

      - name: Configure audit.logs 4 
        shell: 'grep MAC-policy /etc/audit/audit.rules'
        register: var97_out
        ignore_errors: yes
      - debug:
          var: var97_out
      - name: Printinfo
        local_action: shell echo "Configure audit.logs MAC-policy,Yes" >> file
        when: var97_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Configure audit.logs  MAC-policy,No" >> file
        when: var97_out.rc != 0        

      - name:  Configure audit.logs 5
        shell: 'grep logins /etc/audit/audit.rules'
        register: var98_out
        ignore_errors: yes
      - debug:
          var: var98_out
      - name: Printinfo
        local_action: shell echo "Configure audit.logs logins,Yes" >> file
        when: var98_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Configure audit.logs logins,No" >> file
        when: var98_out.rc != 0 


      - name:  Configure audit.logs 6
        shell: 'grep session /etc/audit/audit.rules'
        register: var99_out
        ignore_errors: yes
      - debug:
          var: var99_out
      - name: Printinfo
        local_action: shell echo "Configure audit.logs session,Yes" >> file
        when: var99_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Configure audit.logs session,No" >> file
        when: var99_out.rc != 0 

      - name: Configure audit.logs 7
        shell: 'grep perm_mod /etc/audit/audit.rules'
        register: var100_out
        ignore_errors: yes
      - debug:
          var: var100_out
      - name: Printinfo
        local_action: shell echo "Configure audit.logs perm_mod,Yes" >> file
        when: var100_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Configure audit.logs perm_mod,No" >> file
        when: var100_out.rc != 0

      - name: Configure audit.logs 8
        shell: 'grep access /etc/audit/audit.rules'
        register: var101_out
        ignore_errors: yes
      - debug:
          var: var101_out
      - name: Printinfo
        local_action: shell echo "Configure audit.logs access,Yes" >> file
        when: var101_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Configure audit.logs access,No" >> file
        when: var101_out.rc != 0
      

      - name: Ensure rsys log installed
        shell: 'dpkg -s rsyslog'
        register: var102_out
        ignore_errors: yes
      - debug:
          var: var102_out
      - name: Printinfo
        local_action: shell echo "Ensure rsys log installed,Yes" >> file
        when: var102_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsys log installed,No" >> file
        when: var102_out.rc != 0  
       

      - name:  Ensure rsyslog Service is enabled
        shell: 'grep "^start" /etc/init/rsyslog.conf'
        register: var103_out
        ignore_errors: yes
      - debug:
          var: var103_out
      - name: Printinfo
        local_action: shell echo "Ensure rsyslog Service is enabled,Yes" >> file
        when: var103_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsyslog Service is enabled,No" >> file
        when: var103_out.rc != 0


      - name: Ensure rsyslog is configured to send logs to a remote log host
        shell: 'grep "^*.*[^I][^I]*@" /etc/rsyslog.conf'
        register: var104_out
        ignore_errors: yes
      - debug:
          var: var104_out
      - name: Printinfo
        local_action: shell echo "Ensure rsyslog is configured to send logs to a remote log host,Yes" >> file
        when: var104_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsyslog is configured to send logs to a remote log host,No" >> file
        when: var104_out.rc != 0
  
      - name: Ensure remote rsyslog messages are only accepted on designated log hosts
        shell: 'grep -E "$ModLoad\s+imtcp.so|$InputTCPServerRun 514" /etc/rsyslog.conf'
        register: var105_out
        ignore_errors: yes
      - debug:
          var: var105_out
      - name: Printinfo
        local_action: shell echo "Ensure remote rsyslog messages are only accepted on designated log hosts,Yes" >> file
        when: var105_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure remote rsyslog messages are only accepted on designated log hosts,No" >> file
        when: var105_out.rc != 0 

          
      - name:  Ensure cron daemon is enabled
        shell: '/etc/init.d/cron status | grep -w "active"'
        register: var106_out
        ignore_errors: yes
      - debug:
          var: var106_out
      - name: Printinfo
        local_action: shell echo "Ensure cron daemon is enabled,Yes" >> file
        when: var106_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure cron daemon is enabled,No" >> file
        when: var106_out.rc != 0 


      - name: Ensure permissions on /etc/crontab are configured
        shell: 'stat -c "%a %u %g" /etc/crontab | egrep ".00 0 0"'
        register: var107_out
        ignore_errors: yes
      - debug:
          var: var107_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/crontab are configured,Yes" >> file
        when: var107_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/crontab are configured,No" >> file
        when: var107_out.rc != 0    

      - name: Ensure permissions on /etc/cron.hourly are configured 
        shell: 'stat -L -c "%a %u %g" /etc/cron.hourly | egrep ".00 0 0"'
        register: var108_out
        ignore_errors: yes
      - debug:
          var: var108_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.hourly are configured,Yes" >> file
        when: var108_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.hourly are configured,No" >> file
        when: var108_out.rc != 0 

      - name: Ensure permissions on /etc/cron.daily are configured 
        shell: 'stat -L -c "%a %u %g" /etc/cron.daily | egrep ".00 0 0"'
        register: var109_out
        ignore_errors: yes
      - debug:
          var: var109_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.daily are configured,Yes" >> file
        when: var109_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.daily are configured,No" >> file
        when: var109_out.rc != 0        

      - name:  Ensure permissions on /etc/cron.weekly are configured
        shell: 'stat -L -c "%a %u %g" /etc/cron.weekly | egrep ".00 0 0"'
        register: var110_out
        ignore_errors: yes
      - debug:
          var: var110_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.weekly are configured,Yes" >> file
        when: var110_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.weekly are configured,No" >> file
        when: var110_out.rc != 0 


      - name: Ensure permissions on /etc/cron.monthly are configured 
        shell: 'stat -L -c "%a %u %g" /etc/cron.monthly | egrep ".00 0 0"'
        register: var111_out
        ignore_errors: yes
      - debug:
          var: var111_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.monthly are configured,Yes" >> file
        when: var111_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.monthly are configured,No" >> file
        when: var111_out.rc != 0 

      - name: Ensure permissions on /etc/cron.d are configured
        shell: 'stat -L -c "%a %u %g" /etc/cron.d | egrep ".00 0 0"'
        register: var112_out
        ignore_errors: yes
      - debug:
          var: var112_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.d are configured,Yes" >> file
        when: var112_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/cron.d are configured,No" >> file
        when: var112_out.rc != 0

      - name: Ensure at/cron is restricted to authorized users | at allow
        shell: '/bin/ls -l /etc/at.allow | grep "\-rw\-\-\-\-\-"'
        register: var113_out
        ignore_errors: yes
      - debug:
          var: var113_out
      - name: Printinfo
        local_action: shell echo "Ensure at/cron is restricted to authorized users | at allow,Yes" >> file
        when: var113_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure at/cron is restricted to authorized users | at allow,No" >> file
        when: var113_out.rc != 0
      
      - name: Ensure at/cron is restricted to authorized users | cron allow
        shell: '/bin/ls -l /etc/cron.allow | grep "\-rw\-\-\-\-\-"'
        register: var114_out
        ignore_errors: yes
      - debug:
          var: var114_out
      - name: Printinfo
        local_action: shell echo "Ensure at/cron is restricted to authorized users | cron allow,Yes" >> file
        when: var114_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure at/cron is restricted to authorized users | cron allow,No" >> file
        when: var114_out.rc != 0   

          
      - name: Check if ssh is installed 
        shell: 'dpkg -s openssh-server'
        register: var115_out
        ignore_errors: yes
      - debug:
          var: var115_out
      - name: Printinfo
        local_action: shell echo "Check if ssh is installed,Yes" >> file
        when: var115_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Check if ssh is installed,No" >> file
        when: var115_out.rc != 0 

      - name:  Ensure permissions on /etc/ssh/sshd_config are configured 
        shell: '/bin/ls -l /etc/ssh/sshd_config | grep "^-rw-------"'
        register: var116_out
        ignore_errors: yes
      - debug:
          var: var116_out
      - name: Printinfo
        local_action: shell echo " Ensure permissions on /etc/ssh/sshd_config are configured,Yes" >> file
        when: var116_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure permissions on /etc/ssh/sshd_config are configured,No" >> file
        when: var116_out.rc != 0 

 
      - name: Ensure SSH Protocol is set to 2  
        shell: 'grep "^Protocol 2" /etc/ssh/sshd_config'
        register: var117_out
        ignore_errors: yes
      - debug:
          var: var117_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH Protocol is set to 2,Yes" >> file
        when: var117_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH Protocol is set to 2,No" >> file
        when: var117_out.rc != 0     


      - name: Ensure SSH LogLevel is set to INFO
        shell: 'grep "^LogLevel INFO" /etc/ssh/sshd_config'
        register: var118_out
        ignore_errors: yes
      - debug:
          var: var118_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH LogLevel is set to INFO,Yes" >> file
        when: var118_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH LogLevel is set to INFO,No" >> file
        when: var118_out.rc != 0        

      - name: Ensure SSH X11 forwarding is disabled
        shell: 'grep "^X11Forwarding no" /etc/ssh/sshd_config'
        register: var119_out
        ignore_errors: yes
      - debug:
          var: var119_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH X11 forwarding is disabled,Yes" >> file
        when: var119_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH X11 forwarding is disabled,No" >> file
        when: var119_out.rc != 0        

      - name: Ensure SSH MaxAuthTries is set to 4 or less
        shell: 'grep "^MaxAuthTries 4" /etc/ssh/sshd_config'
        register: var120_out
        ignore_errors: yes
      - debug:
          var: var120_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH MaxAuthTries is set to 4 or less,Yes" >> file
        when: var120_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH MaxAuthTries is set to 4 or less,No" >> file
        when: var120_out.rc != 0        

      - name: Ensure SSH IgnoreRhosts is enabled
        shell: 'grep "^IgnoreRhosts yes" /etc/ssh/sshd_config'
        register: var121_out
        ignore_errors: yes
      - debug:
          var: var121_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH IgnoreRhosts is enabled,Yes" >> file
        when: var121_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH IgnoreRhosts is enabled,No" >> file
        when: var121_out.rc != 0        

      - name: Ensure SSH HostbasedAuthentication is disabled
        shell: 'grep "^HostbasedAuthentication no" /etc/ssh/sshd_config'
        register: var122_out
        ignore_errors: yes
      - debug:
          var: var122_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH HostbasedAuthentication is disabled,Yes" >> file
        when: var122_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH HostbasedAuthentication is disabled,No" >> file
        when: var122_out.rc != 0        

      - name: Ensure SSH root login is disabled
        shell: 'grep "^PermitRootLogin no" /etc/ssh/sshd_config'
        register: var123_out
        ignore_errors: yes
      - debug:
          var: var123_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH root login is disabled,Yes" >> file
        when: var123_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH root login is disabled,No" >> file
        when: var123_out.rc != 0

      - name: Ensure SSH PermitEmptyPasswords is disabled
        shell: 'grep "^PermitEmptyPasswords no" /etc/ssh/sshd_config'
        register: var124_out
        ignore_errors: yes
      - debug:
          var: var124_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH PermitEmptyPasswords is disabled,Yes" >> file
        when: var124_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH PermitEmptyPasswords is disabled,No" >> file
        when: var124_out.rc != 0                

      - name: Ensure SSH PermitUserEnvironment is disabled
        shell: 'grep "^PermitUserEnvironment no" /etc/ssh/sshd_config'
        register: var125_out
        ignore_errors: yes
      - debug:
          var: var125_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH PermitUserEnvironment is disabled,Yes" >> file
        when: var125_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH PermitUserEnvironment is disabled,No" >> file
        when: var125_out.rc != 0

      - name: Ensure only approved MAC algorithms are used
        shell: 'grep "^Ciphers aes128-ctr,aes192-ctr,aes256-ctr" /etc/ssh/sshd_config'
        register: var126_out
        ignore_errors: yes
      - debug:
          var: var126_out
      - name: Printinfo
        local_action: shell echo "Ensure only approved MAC algorithms are used,Yes" >> file
        when: var126_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure only approved MAC algorithms are used,No" >> file
        when: var126_out.rc != 0    

      - name: Ensure SSH Idle Timeout Interval is configured
        shell: 'grep "^ClientAliveInterval 300" /etc/ssh/sshd_config && grep "^ClientAliveCountMax 0" /etc/ssh/sshd_config'
        register: var127_out
        ignore_errors: yes
      - debug:
          var: var127_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH Idle Timeout Interval is configured,Yes" >> file
        when: var127_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH Idle Timeout Interval is configured,No" >> file
        when: var127_out.rc != 0

      - name: Ensure SSH Idle Timeout Interval is configured
        shell: 'grep "^LoginGraceTime 1m" /etc/ssh/sshd_config'
        register: var128_out
        ignore_errors: yes
      - debug:
          var: var128_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH LoginGraceTime is set to one minute,Yes" >> file
        when: var128_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH LoginGraceTime is set to one minute,No" >> file
        when: var128_out.rc != 0

      - name: Ensure SSH access is limited | AllowUsers
        shell: 'grep "^AllowUsers" /etc/ssh/sshd_config'
        register: var129_out
        ignore_errors: yes
      - debug:
          var: var129_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH access is limited | AllowUsers,Yes" >> file
        when: var129_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH access is limited | AllowUsers,No" >> file
        when: var129_out.rc != 0
     
      - name: Ensure SSH access is limited | AllowGroups
        shell: 'grep "^AllowUsers" /etc/ssh/sshd_config'
        register: var130_out
        ignore_errors: yes
      - debug:
          var: var130_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH access is limited | AllowGroups,Yes" >> file
        when: var130_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH access is limited | AllowGroups,No" >> file
        when: var130_out.rc != 0

      - name: Ensure SSH access is limited | DenyUsers
        shell: 'grep "^DenyUsers" /etc/ssh/sshd_config'
        register: var131_out
        ignore_errors: yes
      - debug:
          var: var131_out
      - name: Printinfo
        local_action: shell echo "nsure SSH access is limited | DenyUsers,Yes" >> file
        when: var131_out.rc == 0
      - name: Printinfo
        local_action: shell echo "nsure SSH access is limited | DenyUsers,No" >> file
        when: var131_out.rc != 0
     
      - name: Ensure SSH access is limited | DenyGroups
        shell: 'grep "^DenyGroups" /etc/ssh/sshd_config'
        register: var132_out
        ignore_errors: yes
      - debug:
          var: var132_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH access is limited | DenyGroups,Yes" >> file
        when: var132_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH access is limited | DenyGroups,No" >> file
        when: var132_out.rc != 0        

        
      - name: Ensure SSH warning banner is configured
        shell: 'grep "^Banner" /etc/ssh/sshd_config'
        register: var133_out
        ignore_errors: yes
      - debug:
          var: var133_out
      - name: Printinfo
        local_action: shell echo "Ensure SSH warning banner is configured,Yes" >> file
        when: var133_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SSH warning banner is configured,No" >> file
        when: var133_out.rc != 0
   
            
      - name: Ensure password creation requirements are configured
        shell: 'grep pam_cracklib.so /etc/pam.d/common-password'
        register: var134_out
        ignore_errors: yes
      - debug:
          var: var134_out
      - name: Printinfo
        local_action: shell echo "Ensure password creation requirements are configured,Yes" >> file
        when: var134_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure password creation requirements are configured,No" >> file
        when: var134_out.rc != 0


      - name: Ensure lockout for failed password attempts is configured
        shell: 'grep "pam_tally2" /etc/pam.d/login'
        register: var135_out
        ignore_errors: yes
      - debug:
          var: var135_out
      - name: Printinfo
        local_action: shell echo "Ensure lockout for failed password attempts is configured,Yes" >> file
        when: var135_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure lockout for failed password attempts is configured,No" >> file
        when: var135_out.rc != 0


      - name: Ensure password reuse is limited
        shell: 'grep "remember" /etc/pam.d/common-password'
        register: var136_out
        ignore_errors: yes
      - debug:
          var: var136_out
      - name: Printinfo
        local_action: shell echo "Ensure password reuse is limited,Yes" >> file
        when: var136_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure password reuse is limited,No" >> file
        when: var136_out.rc != 0        

      - name: Ensure password expiration is 90 days
        shell: 'grep -E "PASS_MAX_DAYS\s+90" /etc/login.defs'
        register: var137_out
        ignore_errors: yes
      - debug:
          var: var137_out
      - name: Printinfo
        local_action: shell echo "Ensure password expiration is 90 days,Yes" >> file
        when: var137_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure password expiration is 90 days,No" >> file
        when: var137_out.rc != 0        

      - name: Ensure minimum days between password changes is 7 
        shell: 'grep -E "PASS_MIN_DAYS\s+7" /etc/login.defs'
        register: var138_out
        ignore_errors: yes
      - debug:
          var: var138_out
      - name: Printinfo
        local_action: shell echo "Ensure minimum days between password changes is 7,Yes" >> file
        when: var138_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure minimum days between password changes is 7,No" >> file
        when: var138_out.rc != 0 

      - name: Ensure password expiration warning days is 7 or more
        shell: 'grep -E "PASS_WARN_AGE\s+7" /etc/login.defs'
        register: var139_out
        ignore_errors: yes
      - debug:
          var: var139_out
      - name: Printinfo
        local_action: shell echo "Ensure password expiration warning days is 7 or more,Yes" >> file
        when: var139_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure password expiration warning days is 7 or more,No" >> file
        when: var139_out.rc != 0 

      - name: Ensure inactive password lock is 30 days or less
        shell: 'useradd -D | grep INACTIVE=30'
        register: var140_out
        ignore_errors: yes
      - debug:
          var: var140_out
      - name: Printinfo
        local_action: shell echo "Ensure inactive password lock is 30 days or less,Yes" >> file
        when: var140_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure inactive password lock is 30 days or less,No" >> file
        when: var140_out.rc != 0                            
      
      - name: Ensure default group for the root account is GID 0 
        shell: 'grep "^root:" /etc/passwd | cut -f4 -d: | grep "0"'
        register: var141_out
        ignore_errors: yes
      - debug:
          var: var141_out
      - name: Printinfo
        local_action: shell echo "Ensure default group for the root account is GID 0,Yes" >> file
        when: var141_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure default group for the root account is GID 0,No" >> file
        when: var141_out.rc != 0  
            
      - name: Ensure default group for the root account is GID 0 
        shell: 'grep "^root:" /etc/passwd | cut -f4 -d: | grep "0"'
        register: var141_out
        ignore_errors: yes
      - debug:
          var: var141_out
      - name: Printinfo
        local_action: shell echo "Ensure default group for the root account is GID 0,Yes" >> file
        when: var141_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure default group for the root account is GID 0,No" >> file
        when: var141_out.rc != 0


      - name: Ensure default user umask is 027 or more restrictive 
        shell: 'grep -i "umask\s077" /etc/login.defs'
        register: var142_out
        ignore_errors: yes
      - debug:
          var: var142_out
      - name: Printinfo
        local_action: shell echo "Ensure default user umask is 027 or more restrictive,Yes" >> file
        when: var142_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure default user umask is 027 or more restrictive,No" >> file
        when: var142_out.rc != 0

      - name:  Ensure root login is restricted to system console 
        shell: 'cat /etc/securetty'
        register: var143_out
        ignore_errors: yes
      - debug:
          var: var143_out
      - name: Printinfo
        local_action: shell echo "Ensure root login is restricted to system console,Yes" >> file
        when: var143_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure root login is restricted to system console,No" >> file
        when: var143_out.rc != 0         

      - name:  Ensure root login is restricted to system console 
        shell: 'cat /etc/securetty'
        register: var143_out
        ignore_errors: yes
      - debug:
          var: var143_out
      - name: Printinfo
        local_action: shell echo "Ensure root login is restricted to system console,Yes" >> file
        when: var143_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure root login is restricted to system console,No" >> file
        when: var143_out.rc != 0


      - name: Ensure access to the su command is restricted 
        shell: 'grep -E "auth\s+required\s+pam_wheel.so\s+use_uid" /etc/pam.d/su'
        register: var144_out
        ignore_errors: yes
      - debug:
          var: var144_out
      - name: Printinfo
        local_action: shell echo "Ensure access to the su command is restricted,Yes" >> file
        when: var144_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure access to the su command is restricted,No" >> file
        when: var144_out.rc != 0

      - name: Ensure permissions on /etc/passwd are configured
        shell: '/bin/ls -l /etc/passwd | grep "^-rw-r--r--"'
        register: var145_out
        ignore_errors: yes
      - debug:
          var: var145_out
      - name: Printinfo
        local_action: shell echo " Ensure permissions on /etc/passwd are configured,Yes" >> file
        when: var145_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure permissions on /etc/passwd are configured,No" >> file
        when: var145_out.rc != 0     

      - name: Ensure permissions on /etc/shadow are configured
        shell: '/bin/ls -l /etc/shadow | grep "^-rw-------"'
        register: var146_out
        ignore_errors: yes
      - debug:
          var: var146_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/shadow are configured,Yes" >> file
        when: var146_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/shadow are configured,No" >> file
        when: var146_out.rc != 0


      - name: Ensure permissions on /etc/group are configured
        shell: '/bin/ls -l /etc/group | grep "^-rw-r--r--"'
        register: var147_out
        ignore_errors: yes
      - debug:
          var: var147_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/group are configured,Yes" >> file
        when: var147_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/group are configured,No" >> file
        when: var147_out.rc != 0 

      - name: Ensure permissions on /etc/gshadow are configured 
        shell: '/bin/ls -l /etc/gshadow | grep "^-rw-------"'
        register: var148_out
        ignore_errors: yes
      - debug:
          var: var148_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/gshadow are configured,Yes" >> file
        when: var148_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on /etc/gshadow are configured,No" >> file
        when: var148_out.rc != 0

      - name: Ensure no unowned files or directories exist 
        shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser -ls"
        register: var149_out
        ignore_errors: yes
      - debug:
          var: var149_out
      - name: Printinfo
        local_action: shell echo "Ensure no unowned files or directories exist,Yes" >> file
        when: var149_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure no unowned files or directories exist,No" >> file
        when: var149_out.rc != 0

      - name:  Ensure no ungrouped files or directories exis 
        shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup -ls"
        register: var150_out
        ignore_errors: yes
      - debug:
          var: var150_out
      - name: Printinfo
        local_action: shell echo "Ensure no ungrouped files or directories exis,Yes" >> file
        when: var150_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure no ungrouped files or directories exis,No" >> file
        when: var150_out.rc != 0

      - name: Ensure no legacy "+" entries exist in /etc/passwd 
        shell: "/bin/grep '^+:' /etc/passwd"
        register: var151_out
        ignore_errors: yes
      - debug:
          var: var151_out
      - name: Printinfo
        local_action: shell echo "Ensure no legacy "+" entries exist in /etc/passwd,Yes" >> file
        when: var151_out.rc == 1
      - name: Printinfo
        local_action: shell echo "Ensure no legacy "+" entries exist in /etc/passwd,No" >> file
        when: var151_out.rc != 1

      - name:  Ensure no legacy "+" entries exist in /etc/shadow 
        shell: "/bin/grep '^+:' /etc/shadow"
        register: var152_out
        ignore_errors: yes
      - debug:
          var: var152_out
      - name: Printinfo
        local_action: shell echo "Ensure no legacy "+" entries exist in /etc/shadow,Yes" >> file
        when: var152_out.rc == 1
      - name: Printinfo
        local_action: shell echo "Ensure no legacy "+" entries exist in /etc/shadow,No" >> file
        when: var152_out.rc != 1

      - name:  Ensure no legacy "+" entries exist in /etc/group  
        shell: "/bin/grep '^+:' /etc/group"
        register: var153_out
        ignore_errors: yes
      - debug:
          var: var153_out
      - name: Printinfo
        local_action: shell echo " Ensure no legacy "+" entries exist in /etc/group ,Yes" >> file
        when: var153_out.rc == 1
      - name: Printinfo
        local_action: shell echo " Ensure no legacy "+" entries exist in /etc/group ,No" >> file
        when: var153_out.rc != 1        


      - name: Ensure root PATH Integrity  
        shell: ./path_integrity_root.sh
        register: var155_out
        ignore_errors: yes
      - debug:
          var: var155_out
      - name: Printinfo
        local_action: shell echo "Ensure root PATH Integrity,Yes" >> file
        when: var155_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure root PATH Integrity,No" >> file
        when: var155_out.rc != 0   

      - name:  Ensure users own their home directories 
        shell: ./user_home_own.sh
        register: var156_out
        ignore_errors: yes
      - debug:
          var: var156_out
      - name: Printinfo
        local_action: shell echo "Ensure users own their home directories,Yes" >> file
        when: var156_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure users own their home directories,No" >> file
        when: var156_out.rc != 0

      - name: Ensure users' home directories permissions are 750
        shell: ./user_home_permision.sh
        register: var157_out
        ignore_errors: yes
      - debug:
          var: var157_out
      - name: Printinfo
        local_action: shell echo "Ensure users' home directories permissions are 750,Yes" >> file
        when: '"Other" in var157_out.stdout'
      - name: Printinfo
        local_action: shell echo "Ensure users' home directories permissions are 750,No" >> file
        when: var157_out.stdout_lines | length > 0

      - name: Ensure users' dot files are not group or world writable
        shell: ./dot_check.sh
        register: var158_out
        ignore_errors: yes
      - debug:
          var: var158_out
      - name: Printinfo
        local_action: shell echo "Ensure users' dot files are not group or world writable,Yes" >> file
        when: var158_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure users' dot files are not group or world writable,No" >> file
        when: var158_out.rc != 0   
 
      - name: Ensure no users have .forward files
        shell: ./user_forwardfile.sh
        register: var159_out
        ignore_errors: yes
      - debug:
          var: var159_out
      - name: Printinfo
        local_action: shell echo "Ensure no users have .forward files,Yes" >> file
        when: var159_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure no users have .forward files,No" >> file
        when: var159_out.rc != 0

      - name: Ensure no users have .netrc files
        shell: ./user_netrc_file.sh
        register: var160_out
        ignore_errors: yes
      - debug:
          var: var160_out
      - name: Printinfo
        local_action: shell echo "Ensure no users have .netrc files,Yes" >> file
        when: var160_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure no users have .netrc files,No" >> file
        when: var160_out.rc != 0     
     
      - name: Ensure no users have .rhosts files
        shell: ./user_rhost.sh
        register: var161_out
        ignore_errors: yes
      - debug:
          var: var161_out
      - name: Printinfo
        local_action: shell echo "Ensure no users have .rhosts files,Yes" >> file
        when: var161_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure no users have .rhosts files,No" >> file
        when: var161_out.rc != 0   
     
      - name: Ensure all groups in /etc/passwd exist in /etc/group
        shell: ./group_check.sh
        register: var162_out
        ignore_errors: yes
      - debug:
          var: var162_out
      - name: Printinfo
        local_action: shell echo "Ensure all groups in /etc/passwd exist in /etc/group,Yes" >> file
        when: var162_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure all groups in /etc/passwd exist in /etc/group,No" >> file
        when: var162_out.rc != 0   

      - name: Ensure no duplicate UIDs exist
        shell: ./duplicate_uid.sh
        register: var163_out
        ignore_errors: yes
      - debug:
          var: var163_out
      - name: Printinfo
        local_action: shell echo "Ensure no duplicate UIDs exist,Yes" >> file
        when: var163_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure no duplicate UIDs exist,No" >> file
        when: var163_out.rc != 0  
     
      - name: Ensure no duplicate GIDs exist
        shell: ./duplicate_guid.sh
        register: var164_out
        ignore_errors: yes
      - debug:
          var: var164_out
      - name: Printinfo
        local_action: shell echo "Ensure no duplicate GIDs exist,Yes" >> file
        when: var164_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure no duplicate GIDs exist,No" >> file
        when: var164_out.rc != 0   
      
      - name: Ensure no duplicate user names exist
        shell: ./duplicate_user.sh
        register: var165_out
        ignore_errors: yes
      - debug:
          var: var165_out
      - name: Printinfo
        local_action: shell echo "Ensure no duplicate user names exist,Yes" >> file
        when: var165_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure no duplicate user names exist,No" >> file
        when: var165_out.rc != 0  
     
      - name: Ensure no duplicate group names exist
        shell: ./duplicate_group.sh
        register: var166_out
        ignore_errors: yes
      - debug:
          var: var166_out
      - name: Printinfo
        local_action: shell echo "Ensure no duplicate group names exist,Yes" >> file
        when: var166_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure no duplicate group names exist,No" >> file
        when: var166_out.rc != 0

      - name: Ensure shadow group is empty
        shell: 'grep ^shadow /etc/group'
        register: var167_out
        ignore_errors: yes
      - debug:
          var: var167_out
      - name: Printinfo
        local_action: shell echo "Ensure shadow group is empty,Yes" >> file
        when: var167_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure shadow group is empty,No" >> file
        when: var167_out.rc != 0
