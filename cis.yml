---
 - name: CIS Validation
   hosts: localhost



   tasks:
      - name: Ensure mounting of cramfs filesystems is disabled
        shell: /sbin/modprobe -n -v cramfs | grep -i 'install' | cut -d ' ' -f 1
        register: v1_out

      - debug:
          var: v1_out

      - name: Printinfo
        local_action: shell echo "Ensure mounting of cramfs filesystems is disabled,Yes" >> file
        when: v1_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of cramfs filesystems is disabled,No" >> file
        when: v1_out.stdout != "install"
########NewSet
      - name: Ensure mounting of freevxfs  filesystems is disabled
        shell: /sbin/modprobe -n -v freevxfs  | grep -i 'install' | cut -d ' ' -f 1
        register: v2_out
      - debug:
          var: v_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of freevxfs filesystems is disabled,Yes" >> file
        when: v2_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of freevxfs filesystems is disabled,No" >> file
        when: v2_out.stdout != "install"

      - name: Ensure mounting of jffs2  filesystems is disabled
        shell: /sbin/modprobe -n -v jffs2  | grep -i 'install' | cut -d ' ' -f 1
        register: v3_out
      - debug:
          var: v3_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of jffs2  filesystems is disabled,Yes" >> file
        when: v3_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of jffs2  filesystems is disabled,No" >> file
        when: v3_out.stdout != "install"

      - name: Ensure mounting of hfs   filesystems is disabled
        shell: /sbin/modprobe -n -v hfs | grep -i 'install' | cut -d ' ' -f 1
        register: v4_out
      - debug:
          var: v4_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfs   filesystems is disabled,Yes" >> file
        when: v4_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfs   filesystems is disabled,No" >> file
        when: v4_out.stdout != "install"  
  
      - name: Ensure mounting of hfsplus filesystems is disabled
        shell: /sbin/modprobe -n -v hfsplus | grep -i 'install' | cut -d ' ' -f 1
        register: v5_out
      - debug:
          var: v5_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfsplus filesystems is disabled,Yes" >> file
        when: v5_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfsplus filesystems is disabled,No" >> file
        when: v5_out.stdout != "install"
       
      - name: Ensure mounting of squashfs filesystems is disabled
        shell: /sbin/modprobe -n -v squashfs | grep -i 'install' | cut -d ' ' -f 1
        register: v6_out
      - debug:
          var: v6_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of squashfs  filesystems is disabled,Yes" >> file
        when: v6_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of squashfs  filesystems is disabled,No" >> file
        when: v6_out.stdout != "install"
      
      - name: Ensure mounting of udf  filesystems is disabled
        shell: /sbin/modprobe -n -v udf  | grep -i 'install' | cut -d ' ' -f 1
        register: v7_out
      - debug:
          var: v7_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of udf filesystems is disabled,Yes" >> file
        when: v7_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of udf filesystems is disabled,No" >> file
        when: v7_out.stdout != "install"

      - name: Ensure mounting of vfat filesystems is disabled
        shell: /sbin/modprobe -n -v vfat | grep -i 'install' | cut -d ' ' -f 1
        register: v8_out
      - debug:
          var: v8_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of vfat  filesystems is disabled,Yes" >> file
        when: v8_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of vfat filesystems is disabled,No" >> file
        when: v8_out.stdout != "install"
##########        
      - name: Ensure separate partition exists for /tmp
        shell: "grep '[[:space:]]/tmp[[:space:]]' /etc/fstab"
        register: tmp_out
        ignore_errors: yes
      - debug:
          var: tmp_out   
      - name: Printinfo
        local_action: shell echo " Ensure separate partition exists for /tmp,Yes" >> file
        when: tmp_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure separate partition exists for /tmp,No" >> file
        when: tmp_out.rc != 0 
      
      - name: Ensure separate partition exists for /tmp
        shell: " grep /tmp /etc/fstab | grep nodev"
        register: tmp1_out
        ignore_errors: yes
      - debug:
          var: tmp1_out
      - name: Printinfo
        local_action: shell echo "Set nodev,nosuid,noexec option for /tmp Partition,Yes" >> file
        when: tmp1_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Set nodev,nosuid,noexec option for /tmp Partition,No" >> file
        when: tmp1_out.rc != 0  

##############
      - name: Create Separate Partition for /var            
        shell: "grep '[[:space:]]/var[[:space:]]' /etc/fstab"
        register: var_out
        ignore_errors: yes
      - debug:
          var: var_out
      - name: Printinfo
        local_action: shell echo "Ensure Separate Partition for /var,Yes" >> file
        when: var_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure Separate Partition for /var,No" >> file
        when: var_out.rc != 0
#############################
      - name: Bind Mount the /var/tmp directory to /tmp
        shell: "grep -e '^/tmp' /etc/fstab | grep /var/tmp"
        register: tmp3_out
        ignore_errors: yes
      - debug:
          var: tmp3_out
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,Yes" >> file
        when: tmp3_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,No" >> file
        when: tmp3_out.rc != 0
#########################
      - name: Bind Mount the /var/tmp directory to /tmp
        shell: "grep -e '^/tmp' /etc/fstab | grep /var/tmp"
        register: tmp3_out
        ignore_errors: yes
      - debug:
          var: tmp3_out
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,Yes" >> file
        when: tmp3_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,No" >> file
        when: tmp3_out.rc != 0 
      - name: Ensure nodev option set on /tmp partition
        shell:  grep /tmp /etc/fstab | grep nodev
        register: tmp4_out
        ignore_errors: yes
      - debug:
          var: tmp4_out
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /tmp partition,Yes" >> file
        when: tmp4_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /tmp partition,No" >> file
        when: tmp4_out.rc != 0

      - name: Ensure noexec option set on /tmp partition
        shell:  grep /tmp /etc/fstab | grep noexec
        register: tmp5_out
        ignore_errors: yes
      - debug:
          var: tmp5_out
      - name: Printinfo
        local_action: shell echo "Ensure noexec option set on /tmp partition,Yes" >> file
        when: tmp5_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure noexec option set on /tmp partition,No" >> file
        when: tmp5_out.rc != 0
        

      - name: Ensure nosuid option set on /tmp partition
        shell:  grep /tmp /etc/fstab | grep nosuid
        register: tmp6_out
        ignore_errors: yes
      - debug:
          var: tmp6_out
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /tmp partition,Yes" >> file
        when: tmp6_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /tmp partition,No" >> file
        when: tmp6_out.rc != 0 

      - name: Ensure separate partition exists for /var/log 
        shell: "grep '[[:space:]]/var/log[[:space:]]' /etc/fstab"
        register: var2_out
        ignore_errors: yes
      - debug:
          var: var2_out
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log,Yes" >> file
        when: var2_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log,No" >> file
        when: var2_out.rc != 0

      - name: Ensure separate partition exists for /var/log/audit 
        shell:  "grep '[[:space:]]/var/log/audit[[:space:]]' /etc/fstab"
        register: var6_out
        ignore_errors: yes
      - debug:
          var: var6_out
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log/audit,Yes" >> file
        when: var6_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log/audit,No" >> file
        when: var6_out.rc != 0
        

      - name: Ensure separate partition exists for /home 
        shell: "grep '[[:space:]]/home[[:space:]]' /etc/fstab"
        register: var7_out
        ignore_errors: yes
      - debug:
          var: var7_out
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /home,Yes" >> file
        when: var7_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /home,No" >> file
        when: var7_out.rc != 0    
     
      - name: Ensure nodev option set on /home partition
        shell:  grep /home /etc/fstab | grep nodev
        register: var8_out
        ignore_errors: yes
      - debug:
          var: var8_out
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /home partition,Yes" >> file
        when: var8_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /home partition,No" >> file
        when: var8_out.rc != 0

      - name: Ensure nodev option set on /run/shm partition 
        shell:   grep /run/shm /etc/fstab | grep nodev
        register: var9_out
        ignore_errors: yes
      - debug:
          var: var9_out
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /run/shm partition,Yes" >> file
        when: var9_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /run/shm partition,No" >> file
        when: var9_out.rc != 0
        

      - name: Ensure nosuid option set on /run/shm partition 
        shell:  grep /run/shm /etc/fstab | grep nosuid
        register: var10_out
        ignore_errors: yes
      - debug:
          var: var10_out
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /run/shm partition,Yes" >> file
        when: var10_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /run/shm partition,No" >> file
        when: var10_out.rc != 0       
#####################
      - name: Ensure sticky bit is set on all world-writable directories 
        shell:  df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \)
        register: var11_out
        ignore_errors: yes
      - debug:
          var: var11_out
      - name: Printinfo
        local_action: shell echo "Ensure sticky bit is set on all world-writable directories,Yes" >> file
        when: var11_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure sticky bit is set on all world-writable directories,No" >> file
        when: var11_out.rc != 0

      - name: Disable Automounting 
        shell:  initctl show-config autofs
        register: var12_out
        ignore_errors: yes
      - debug:
          var: var12_out
      - name: Printinfo
        local_action: shell echo "Disable Automounting,Yes" >> file
        when: var12_out.rc != 0
      - name: Printinfo
        local_action: shell echo "Disable Automounting,No" >> file
        when: var12_out.rc == 0    
      
      - name: Ensure AIDE is installed 
        shell:  dpkg -s aide 
        register: var13_out
        ignore_errors: yes
      - debug:
          var: var13_out
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed,Yes" >> file
        when: var13_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed,No" >> file
        when: var13_out.rc != 0   
     
      - name: Ensure AIDE is installed | DB validate
        shell:  "ls -lart /var/lib/aide/aide.db.new"
        register: var14_out
        ignore_errors: yes
      - debug:
          var: var14_out
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed | DB validate,Yes" >> file
        when: var14_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed | DB validate,No" >> file
        when: var14_out.rc != 0  
 
      - name: Ensure filesystem integrity is regularly checked
        shell:  "crontab -u root -l | grep aide"
        register: var15_out
        ignore_errors: yes
      - debug:
          var: var15_out
      - name: Printinfo
        local_action: shell echo "Ensure filesystem integrity is regularly checked,Yes" >> file
        when: var15_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure filesystem integrity is regularly checked,No" >> file
        when: var15_out.rc != 0
