---
 - name: CIS Validation
   hosts: localhost



   tasks:
      - name: Ensure mounting of cramfs filesystems is disabled
        shell: /sbin/modprobe -n -v cramfs | grep -i 'install' | cut -d ' ' -f 1
        register: v1_out

      - debug:
          var: v1_out

      - name: Printinfo
        local_action: shell echo "Ensure mounting of cramfs filesystems is disabled,Yes" >> file
        when: v1_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of cramfs filesystems is disabled,No" >> file
        when: v1_out.stdout != "install"
########NewSet
      - name: Ensure mounting of freevxfs  filesystems is disabled
        shell: /sbin/modprobe -n -v freevxfs  | grep -i 'install' | cut -d ' ' -f 1
        register: v2_out
      - debug:
          var: v_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of freevxfs filesystems is disabled,Yes" >> file
        when: v2_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of freevxfs filesystems is disabled,No" >> file
        when: v2_out.stdout != "install"

      - name: Ensure mounting of jffs2  filesystems is disabled
        shell: /sbin/modprobe -n -v jffs2  | grep -i 'install' | cut -d ' ' -f 1
        register: v3_out
      - debug:
          var: v3_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of jffs2  filesystems is disabled,Yes" >> file
        when: v3_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of jffs2  filesystems is disabled,No" >> file
        when: v3_out.stdout != "install"

      - name: Ensure mounting of hfs   filesystems is disabled
        shell: /sbin/modprobe -n -v hfs | grep -i 'install' | cut -d ' ' -f 1
        register: v4_out
      - debug:
          var: v4_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfs   filesystems is disabled,Yes" >> file
        when: v4_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfs   filesystems is disabled,No" >> file
        when: v4_out.stdout != "install"  
  
      - name: Ensure mounting of hfsplus filesystems is disabled
        shell: /sbin/modprobe -n -v hfsplus | grep -i 'install' | cut -d ' ' -f 1
        register: v5_out
      - debug:
          var: v5_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfsplus filesystems is disabled,Yes" >> file
        when: v5_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of hfsplus filesystems is disabled,No" >> file
        when: v5_out.stdout != "install"
       
      - name: Ensure mounting of squashfs filesystems is disabled
        shell: /sbin/modprobe -n -v squashfs | grep -i 'install' | cut -d ' ' -f 1
        register: v6_out
      - debug:
          var: v6_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of squashfs  filesystems is disabled,Yes" >> file
        when: v6_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of squashfs  filesystems is disabled,No" >> file
        when: v6_out.stdout != "install"
      
      - name: Ensure mounting of udf  filesystems is disabled
        shell: /sbin/modprobe -n -v udf  | grep -i 'install' | cut -d ' ' -f 1
        register: v7_out
      - debug:
          var: v7_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of udf filesystems is disabled,Yes" >> file
        when: v7_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of udf filesystems is disabled,No" >> file
        when: v7_out.stdout != "install"

      - name: Ensure mounting of vfat filesystems is disabled
        shell: /sbin/modprobe -n -v vfat | grep -i 'install' | cut -d ' ' -f 1
        register: v8_out
      - debug:
          var: v8_out
      - name: Printinfo
        local_action: shell echo "Ensure mounting of vfat  filesystems is disabled,Yes" >> file
        when: v8_out.stdout == "install"
      - name: Printinfo
        local_action: shell echo "Ensure mounting of vfat filesystems is disabled,No" >> file
        when: v8_out.stdout != "install"
##########        
      - name: Ensure separate partition exists for /tmp
        shell: "grep '[[:space:]]/tmp[[:space:]]' /etc/fstab"
        register: tmp_out
        ignore_errors: yes
      - debug:
          var: tmp_out   
      - name: Printinfo
        local_action: shell echo " Ensure separate partition exists for /tmp,Yes" >> file
        when: tmp_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure separate partition exists for /tmp,No" >> file
        when: tmp_out.rc != 0 
      
      - name: Ensure separate partition exists for /tmp
        shell: " grep /tmp /etc/fstab | grep nodev"
        register: tmp1_out
        ignore_errors: yes
      - debug:
          var: tmp1_out
      - name: Printinfo
        local_action: shell echo "Set nodev,nosuid,noexec option for /tmp Partition,Yes" >> file
        when: tmp1_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Set nodev,nosuid,noexec option for /tmp Partition,No" >> file
        when: tmp1_out.rc != 0  

##############
      - name: Create Separate Partition for /var            
        shell: "grep '[[:space:]]/var[[:space:]]' /etc/fstab"
        register: var_out
        ignore_errors: yes
      - debug:
          var: var_out
      - name: Printinfo
        local_action: shell echo "Ensure Separate Partition for /var,Yes" >> file
        when: var_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure Separate Partition for /var,No" >> file
        when: var_out.rc != 0
#############################
      - name: Bind Mount the /var/tmp directory to /tmp
        shell: "grep -e '^/tmp' /etc/fstab | grep /var/tmp"
        register: tmp3_out
        ignore_errors: yes
      - debug:
          var: tmp3_out
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,Yes" >> file
        when: tmp3_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,No" >> file
        when: tmp3_out.rc != 0
#########################
      - name: Bind Mount the /var/tmp directory to /tmp
        shell: "grep -e '^/tmp' /etc/fstab | grep /var/tmp"
        register: tmp3_out
        ignore_errors: yes
      - debug:
          var: tmp3_out
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,Yes" >> file
        when: tmp3_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Bind Mount the /var/tmp directory to /tmp,No" >> file
        when: tmp3_out.rc != 0 
      - name: Ensure nodev option set on /tmp partition
        shell:  grep /tmp /etc/fstab | grep nodev
        register: tmp4_out
        ignore_errors: yes
      - debug:
          var: tmp4_out
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /tmp partition,Yes" >> file
        when: tmp4_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /tmp partition,No" >> file
        when: tmp4_out.rc != 0

      - name: Ensure noexec option set on /tmp partition
        shell:  grep /tmp /etc/fstab | grep noexec
        register: tmp5_out
        ignore_errors: yes
      - debug:
          var: tmp5_out
      - name: Printinfo
        local_action: shell echo "Ensure noexec option set on /tmp partition,Yes" >> file
        when: tmp5_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure noexec option set on /tmp partition,No" >> file
        when: tmp5_out.rc != 0
        

      - name: Ensure nosuid option set on /tmp partition
        shell:  grep /tmp /etc/fstab | grep nosuid
        register: tmp6_out
        ignore_errors: yes
      - debug:
          var: tmp6_out
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /tmp partition,Yes" >> file
        when: tmp6_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /tmp partition,No" >> file
        when: tmp6_out.rc != 0 

      - name: Ensure separate partition exists for /var/log 
        shell: "grep '[[:space:]]/var/log[[:space:]]' /etc/fstab"
        register: var2_out
        ignore_errors: yes
      - debug:
          var: var2_out
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log,Yes" >> file
        when: var2_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log,No" >> file
        when: var2_out.rc != 0

      - name: Ensure separate partition exists for /var/log/audit 
        shell:  "grep '[[:space:]]/var/log/audit[[:space:]]' /etc/fstab"
        register: var6_out
        ignore_errors: yes
      - debug:
          var: var6_out
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log/audit,Yes" >> file
        when: var6_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /var/log/audit,No" >> file
        when: var6_out.rc != 0
        

      - name: Ensure separate partition exists for /home 
        shell: "grep '[[:space:]]/home[[:space:]]' /etc/fstab"
        register: var7_out
        ignore_errors: yes
      - debug:
          var: var7_out
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /home,Yes" >> file
        when: var7_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure separate partition exists for /home,No" >> file
        when: var7_out.rc != 0    
     
      - name: Ensure nodev option set on /home partition
        shell:  grep /home /etc/fstab | grep nodev
        register: var8_out
        ignore_errors: yes
      - debug:
          var: var8_out
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /home partition,Yes" >> file
        when: var8_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /home partition,No" >> file
        when: var8_out.rc != 0

      - name: Ensure nodev option set on /run/shm partition 
        shell:   grep /run/shm /etc/fstab | grep nodev
        register: var9_out
        ignore_errors: yes
      - debug:
          var: var9_out
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /run/shm partition,Yes" >> file
        when: var9_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nodev option set on /run/shm partition,No" >> file
        when: var9_out.rc != 0
        

      - name: Ensure nosuid option set on /run/shm partition 
        shell:  grep /run/shm /etc/fstab | grep nosuid
        register: var10_out
        ignore_errors: yes
      - debug:
          var: var10_out
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /run/shm partition,Yes" >> file
        when: var10_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure nosuid option set on /run/shm partition,No" >> file
        when: var10_out.rc != 0       
#####################
      - name: Ensure sticky bit is set on all world-writable directories 
        shell:  df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \)
        register: var11_out
        ignore_errors: yes
      - debug:
          var: var11_out
      - name: Printinfo
        local_action: shell echo "Ensure sticky bit is set on all world-writable directories,Yes" >> file
        when: var11_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure sticky bit is set on all world-writable directories,No" >> file
        when: var11_out.rc != 0

      - name: Disable Automounting 
        shell:  initctl show-config autofs
        register: var12_out
        ignore_errors: yes
      - debug:
          var: var12_out
      - name: Printinfo
        local_action: shell echo "Disable Automounting,Yes" >> file
        when: var12_out.rc != 0
      - name: Printinfo
        local_action: shell echo "Disable Automounting,No" >> file
        when: var12_out.rc == 0    
      
      - name: Ensure AIDE is installed 
        shell:  dpkg -s aide 
        register: var13_out
        ignore_errors: yes
      - debug:
          var: var13_out
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed,Yes" >> file
        when: var13_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed,No" >> file
        when: var13_out.rc != 0   
     
      - name: Ensure AIDE is installed | DB validate
        shell:  "ls -lart /var/lib/aide/aide.db.new"
        register: var14_out
        ignore_errors: yes
      - debug:
          var: var14_out
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed | DB validate,Yes" >> file
        when: var14_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure AIDE is installed | DB validate,No" >> file
        when: var14_out.rc != 0  
 
      - name: Ensure filesystem integrity is regularly checked
        shell:  "crontab -u root -l | grep aide"
        register: var15_out
        ignore_errors: yes
      - debug:
          var: var15_out
      - name: Printinfo
        local_action: shell echo "Ensure filesystem integrity is regularly checked,Yes" >> file
        when: var15_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure filesystem integrity is regularly checked,No" >> file
        when: var15_out.rc != 0

      - name: Ensure permissions on bootloader config are configured
        shell:  'stat -L -c "%u %g" /boot/grub/grub.cfg | egrep "0 0"'
        register: var16_out
        ignore_errors: yes
      - debug:
          var: var16_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on bootloader config are configured,Yes" >> file
        when: var16_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on bootloader config are configured,No" >> file
        when: var16_out.rc != 0

      - name: Ensure permissions on bootloader config are configured
        shell:  'stat -L -c "%a" /boot/grub/grub.cfg | egrep ".00"'
        register: var17_out
        ignore_errors: yes
      - debug:
          var: var17_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on bootloader config are configured,Yes" >> file
        when: var17_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on bootloader config are configured,No" >> file
        when: var17_out.rc != 0      

      - name: Ensure bootloader password is set
        shell:  'grep "^set superusers" /boot/grub/grub.cfg'
        register: var18_out
        ignore_errors: yes
      - debug:
          var: var18_out
      - name: Printinfo
        local_action: shell echo "Ensure bootloader password is set,Yes" >> file
        when: var18_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure bootloader password is set,No" >> file
        when: var18_out.rc != 0

      - name: Ensure authentication required for single user mode
        shell:  'grep ^root:[*\!]: /etc/shadow'
        register: var19_out
        ignore_errors: yes
      - debug:
          var: var19_out
      - name: Printinfo
        local_action: shell echo "Ensure authentication required for single user mode,No" >> file
        when: var19_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure authentication required for single user mode,Yes" >> file
        when: var19_out.rc != 0  
      
      - name: Ensure core dumps are restricted
        shell:  'grep "* hard core 0" /etc/security/limits.conf'
        register: var20_out
        ignore_errors: yes
      - debug:
          var: var20_out
      - name: Printinfo
        local_action: shell echo "Ensure core dumps are restricted,Yes" >> file
        when: var20_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure core dumps are restricted,No" >> file
        when: var20_out.rc != 0

      - name: Ensure core dumps are restricted
        shell:  sysctl fs.suid_dumpable |grep 0
        register: var21_out
        ignore_errors: yes
      - debug:
          var: var21_out
      - name: Printinfo
        local_action: shell echo "Ensure core dumps are restricted,Yes" >> file
        when: var21_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure core dumps are restricted,No" >> file
        when: var21_out.rc != 0   
      
      - name: Ensure XD/NX support is enabled
        shell:  'dmesg | grep NX'
        register: var22_out
        ignore_errors: yes
      - debug:
          var: var22_out
      - name: Printinfo
        local_action: shell echo "Ensure XD/NX support is enabled,Yes" >> file
        when: var22_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure XD/NX support is enabled,No" >> file
        when: var22_out.rc != 0  

      - name: Ensure address space layout randomization (ASLR) is enabled 
        shell:  'sysctl kernel.randomize_va_space | grep 2'
        register: var23_out
        ignore_errors: yes
      - debug:
          var: var23_out
      - name: Printinfo
        local_action: shell echo "Ensure address space layout randomization (ASLR) is enabled ,Yes" >> file
        when: var23_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure address space layout randomization (ASLR) is enabled ,No" >> file
        when: var23_out.rc != 0

      - name:  Ensure prelink is disabled
        shell:  dpkg -s prelink
        register: var24_out
        ignore_errors: yes
      - debug:
          var: var24_out
      - name: Printinfo
        local_action: shell echo " Ensure prelink is disabled,No" >> file
        when: var24_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure prelink is disabled,Yes" >> file
        when: var24_out.rc != 0   

      - name:  Ensure SELinux is not disabled in bootloader configuration and enable selinux enforcing
        shell:  'grep SELINUX=enforcing /etc/selinux/config'
        register: var25_out
        ignore_errors: yes
      - debug:
          var: var25_out
      - name: Printinfo
        local_action: shell echo "Ensure SELinux is not disabled in bootloader configuration and enable selinux enforcing,Yes" >> file
        when: var25_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SELinux is not disabled in bootloader configuration and enable selinux enforcing,No" >> file
        when: var25_out.rc != 0   
      
      - name: Ensure AppArmor are installed
        shell:  'apparmor_status'
        register: var27_out
        ignore_errors: yes
      - debug:
          var: var27_out
      - name: Printinfo
        local_action: shell echo "Ensure AppArmor are installed ,Yes" >> file
        when: var27_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure AppArmor are installed ,No" >> file
        when: var27_out.rc != 0

      - name: Ensure permissions on Permision on motd file
        shell: '/bin/ls -l /etc/motd | grep "^-rw-r--r--"'
        register: var28_out
        ignore_errors: yes
      - debug:
          var: var28_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on motd file,Yes" >> file
        when: var28_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on motd file,No" >> file
        when: var28_out.rc != 0  

      
      - name: Ensure permissions on Permision on issue file
        shell: '/bin/ls -l /etc/issue | grep "^-rw-r--r--"'
        register: var29_out
        ignore_errors: yes
      - debug:
          var: var29_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on issue file,Yes" >> file
        when: var29_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on issue file,No" >> file
        when: var29_out.rc != 0  


      - name: Ensure permissions on Permision on issue.net file
        shell: '/bin/ls -l /etc/issue.net | grep "^-rw-r--r--"'
        register: var30_out
        ignore_errors: yes
      - debug:
          var: var30_out
      - name: Printinfo
        local_action: shell echo "Ensure permissions on issue.net file,Yes" >> file
        when: var30_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure permissions on issue.net file,No" >> file
        when: var30_out.rc != 0 


      - name: Ensure local login warning banner is configured properly | remove os info
        shell:  "grep -e '(\\v|\\r|\\m|\\s)' /etc/motd"
        register: var31_out
        ignore_errors: yes
      - debug:
          var: var31_out
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info ,Yes" >> file
        when: var31_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,No" >> file
        when: var31_out.rc != 0

      - name: Ensure local login warning banner is configured properly | remove os info
        shell: "grep -e '(\\v|\\r|\\m|\\s)' /etc/issue"
        register: var32_out
        ignore_errors: yes
      - debug:
          var: var32_out
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,Yes" >> file
        when: var32_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,No" >> file
        when: var32_out.rc != 0  

      
      - name: Ensure local login warning banner is configured properly | remove os info
        shell: "grep -e '(\\v|\\r|\\m|\\s)' /etc/issue.net"
        register: var33_out
        ignore_errors: yes
      - debug:
          var: var33_out
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,Yes" >> file
        when: var33_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure local login warning banner is configured properly | remove os info,No" >> file
        when: var33_out.rc != 0   

      - name: Ensure ntp is Installed
        shell:  "dpkg -s ntp"
        register: var34_out
        ignore_errors: yes
      - debug:
          var: var34_out
      - name: Printinfo
        local_action: shell echo "Ensure ntp is Installed,Yes" >> file
        when: var34_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ntp is Installed,No" >> file
        when: var34_out.rc != 0

      - name: Ensure ntp is configured
        shell: 'grep "restrict .* default" /etc/ntp.conf'
        register: var35_out
        ignore_errors: yes
      - debug:
          var: var35_out
      - name: Printinfo
        local_action: shell echo "Ensure ntp is configured,Yes" >> file
        when: var35_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ntp is configured,No" >> file
        when: var35_out.rc != 0 
      
      - name: Ensure X Window System is not installed
        shell:  "dpkg -l xserver-xorg-core"
        register: var36_out
        ignore_errors: yes
      - debug:
          var: var36_out
      - name: Printinfo
        local_action: shell echo "Ensure X Window System is not installed,Yes" >> file
        when: var36_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure X Window System is not installed,No" >> file
        when: var36_out.rc != 0

      - name: Ensure Avahi Server is not enabled
        shell: 'grep ^start /etc/init/avahi-daemon.conf'
        register: var37_out
        ignore_errors: yes
      - debug:
          var: var37_out
      - name: Printinfo
        local_action: shell echo "Ensure Avahi Server is not enabled,Yes" >> file
        when: var37_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure Avahi Server is not enabled,No" >> file
        when: var37_out.rc != 0  

      - name: Ensure CUPS is not enabled
        shell: 'grep ^start /etc/init/cups.conf'
        register: var38_out
        ignore_errors: yes
      - debug:
          var: var38_out
      - name: Printinfo
        local_action: shell echo "Ensure CUPS is not enabled,Yes" >> file
        when: var38_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure CUPS is not enabled,No" >> file
        when: var38_out.rc != 0
  
      - name: Ensure DHCP Server is not enabled
        shell: 'grep ^start /etc/init/isc-dhcp-server.conf'
        register: var39_out
        ignore_errors: yes
      - debug:
          var: var39_out
      - name: Printinfo
        local_action: shell echo "Ensure DHCP Server is not enabled,Yes" >> file
        when: var39_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure DHCP Server is not enabled,No" >> file
        when: var39_out.rc != 0


      
      - name: Ensure DHCP Server is not enabled
        shell: 'grep ^start /etc/init/isc-dhcp-server6.conf'
        register: var40_out
        ignore_errors: yes
      - debug:
          var: var40_out
      - name: Printinfo
        local_action: shell echo "Ensure DHCP Server is not enabled,Yes" >> file
        when: var40_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure DHCP Server is not enabled,No" >> file
        when: var40_out.rc != 0



      - name: Ensure LDAP server is not enabled
        shell: 'dpkg -s slapd'
        register: var41_out
        ignore_errors: yes
      - debug:
          var: var41_out
      - name: Printinfo
        local_action: shell echo "Ensure LDAP server is not enabled,Yes" >> file
        when: var41_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure LDAP server is not enabled,No" >> file
        when: var41_out.rc != 0  

      
      - name:  Ensure NFS and RPC are not enabled 
        shell: 'ls /etc/rc*.d/S*nfs-kernel-server'
        register: var42_out
        ignore_errors: yes
      - debug:
          var: var42_out
      - name: Printinfo
        local_action: shell echo "Ensure NFS and RPC are not enabled ,Yes" >> file
        when: var42_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure NFS and RPC are not enabled ,No" >> file
        when: var42_out.rc != 0  

      
      - name: Ensure DNS Server is not enabled 
        shell: 'ls /etc/rc*.d/S*bind9'
        register: var43_out
        ignore_errors: yes
      - debug:
          var: var43_out
      - name: Printinfo
        local_action: shell echo "Ensure NFS and RPC are not enabled ,Yes" >> file
        when: var43_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure NFS and RPC are not enabled ,No" >> file
        when: var43_out.rc != 0  

      
      - name:  Ensure FTP Server is not enabled 
        shell: 'grep ^start /etc/init/vsftpd.conf'
        register: var44_out
        ignore_errors: yes
      - debug:
          var: var44_out
      - name: Printinfo
        local_action: shell echo " Ensure FTP Server is not enabled,Yes" >> file
        when: var44_out.rc == 0
      - name: Printinfo
        local_action: shell echo " Ensure FTP Server is not enabled,No" >> file
        when: var44_out.rc != 0   

      - name:  Ensure HTTP server is not enabled
        shell: 'ls /etc/rc*.d/S*apache2'
        register: var45_out
        ignore_errors: yes
      - debug:
          var: var45_out
      - name: Printinfo
        local_action: shell echo "Ensure HTTP server is not enabled,Yes" >> file
        when: var45_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure HTTP server is not enabled,No" >> file
        when: var45_out.rc != 0 


      - name:  Ensure IMAP and POP3 server is not enabled
        shell: 'grep ^start /etc/init/dovecot.conf'
        register: var46_out
        ignore_errors: yes
      - debug:
          var: var46_out
      - name: Printinfo
        local_action: shell echo "Ensure IMAP and POP3 server is not enabled,Yes" >> file
        when: var46_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure IMAP and POP3 server is not enabled,No" >> file
        when: var46_out.rc != 0 


      - name:  Ensure Samba is not enabled
        shell: 'grep ^start /etc/init/smbd.conf'
        register: var47_out
        ignore_errors: yes
      - debug:
          var: var47_out
      - name: Printinfo
        local_action: shell echo "Ensure Samba is not enabled,Yes" >> file
        when: var47_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure Samba is not enabled,No" >> file
        when: var47_out.rc != 0   


      - name:  Ensure HTTP Proxy Server is not enabled
        shell: 'grep ^start /etc/init/squid3.conf'
        register: var48_out
        ignore_errors: yes
      - debug:
          var: var48_out
      - name: Printinfo
        local_action: shell echo "Ensure HTTP Proxy Server is not enabled,Yes" >> file
        when: var48_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure HTTP Proxy Server is not enabled,No" >> file
        when: var48_out.rc != 0  

      - name:  Ensure SNMP Server is not enabled
        shell: 'ls /etc/rc*.d/S*snmpd'
        register: var49_out
        ignore_errors: yes
      - debug:
          var: var49_out
      - name: Printinfo
        local_action: shell echo "Ensure SNMP Server is not enabled,Yes" >> file
        when: var49_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure SNMP Server is not enabled,No" >> file
        when: var49_out.rc != 0    
      
      - name: Ensure mail transfer agent is configured for local-only mode | install postfix
        shell: 'dpkg -s postfix'
        register: var50_out
        ignore_errors: yes
      - debug:
          var: var50_out
      - name: Printinfo
        local_action: shell echo "Ensure mail transfer agent is configured for local-only mode | install postfix,Yes" >> file
        when: var50_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure mail transfer agent is configured for local-only mode | install postfix,No" >> file
        when: var50_out.rc != 0


      - name: Ensure mail transfer agent is configured for local-only mode | file check
        shell: 'netstat -an | grep LIST | grep ":25[[:space:]]"'
        register: var51_out
        ignore_errors: yes
      - debug:
          var: var51_out
      - name: Printinfo
        local_action: shell echo "Ensure mail transfer agent is configured for local-only mode | file check,Yes" >> file
        when: var51_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure mail transfer agent is configured for local-only mode | file check,No" >> file
        when: var51_out.rc != 0


      - name:  Ensure rsh server is not enabled | rsh.socket
        shell: 'grep ^shell /etc/inetd.conf'
        register: var52_out
        ignore_errors: yes
      - debug:
          var: var52_out
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rsh.socket,No" >> file
        when: var52_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rsh.socket,Yes" >> file
        when: var52_out.rc != 0


      
      - name: Ensure rsh server is not enabled | rlogin.socket
        shell: 'grep ^login /etc/inetd.conf'
        register: var53_out
        ignore_errors: yes
      - debug:
          var: var53_out
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rlogin.socket,No" >> file
        when: var53_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rlogin.socket,Yes" >> file
        when: var53_out.rc != 0


      - name: Ensure rsh server is not enabled | rexec.socket
        shell: 'grep ^exec /etc/inetd.conf'
        register: var54_out
        ignore_errors: yes
      - debug:
          var: var54_out
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rexec.socket,No" >> file
        when: var54_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsh server is not enabled | rexec.socket,Yes" >> file
        when: var54_out.rc != 0

      - name: Ensure NIS Server is not enabled
        shell: 'dpkg -s nis'
        register: var55_out
        ignore_errors: yes
      - debug:
          var: var55_out
      - name: Printinfo
        local_action: shell echo "Ensure NIS Server is not enabled,Yes" >> file
        when: var55_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure NIS Server is not enabled,No" >> file
        when: var55_out.rc != 0

  

      - name:  Ensure telnet server is not enabled
        shell: 'grep ^telnet /etc/inetd.conf'
        register: var56_out
        ignore_errors: yes
      - debug:
          var: var56_out
      - name: Printinfo
        local_action: shell echo "Ensure telnet server is not enabled,No" >> file
        when: var56_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure telnet server is not enabled,Yes" >> file
        when: var56_out.rc != 0


      - name: Ensure tftp server is not enabled
        shell: 'grep ^tftp /etc/inetd.conf'
        register: var57_out
        ignore_errors: yes
      - debug:
          var: var57_out
      - name: Printinfo
        local_action: shell echo "Ensure tftp server is not enabled,No" >> file
        when: var57_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure tftp server is not enabled,Yes" >> file
        when: var57_out.rc != 0

      - name: Ensure rsync service is not enabled
        shell: 'grep ^RSYNC_ENABLE=false /etc/default/rsync'
        register: var58_out
        ignore_errors: yes
      - debug:
          var: var58_out
      - name: Printinfo
        local_action: shell echo "Ensure rsync service is not enabled,Yes" >> file
        when: var58_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsync service is not enabled,No" >> file
        when: var58_out.rc != 0


      - name:  Ensure talk service is not enabled
        shell: 'grep ^talk /etc/inetd.conf'
        register: var59_out
        ignore_errors: yes
      - debug:
          var: var59_out
      - name: Printinfo
        local_action: shell echo "Ensure talk service is not enabled,No" >> file
        when: var59_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure talk service is not enabled,Yes" >> file
        when: var59_out.rc != 0 


      - name: Ensure NIS Server is not enabled
        shell: 'dpkg -s nis-client'
        register: var60_out
        ignore_errors: yes
      - debug:
          var: var60_out
      - name: Printinfo
        local_action: shell echo "Ensure NIS client is not enabled,Yes" >> file
        when: var60_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure NIS client is not enabled,No" >> file
        when: var60_out.rc != 0   

     
      - name: Ensure rsh-client is not enabled
        shell: ' dpkg -s rsh-client'
        register: var60_out
        ignore_errors: yes
      - debug:
          var: var60_out
      - name: Printinfo
        local_action: shell echo "Ensure rsh-client is not enabled,Yes" >> file
        when: var60_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure rsh-client is not enabled,No" >> file
        when: var60_out.rc != 0   

      - name: Ensure talk client is not enabled
        shell: 'dpkg -s talk'
        register: var61_out
        ignore_errors: yes
      - debug:
          var: var61_out
      - name: Printinfo
        local_action: shell echo "Ensure talk client is not enabled,Yes" >> file
        when: var61_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure talk client is not enabled,No" >> file
        when: var61_out.rc != 0

      - name: Ensure telnet client is not enabled
        shell: 'dpkg -s telnet'
        register: var62_out
        ignore_errors: yes
      - debug:
          var: var62_out
      - name: Printinfo
        local_action: shell echo "Ensure telnet client is not enabled,Yes" >> file
        when: var62_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure telnet client is not enabled,No" >> file
        when: var62_out.rc != 0

      - name: Ensure ldap client is not enabled
        shell: 'dpkg -s ldap-utils'
        register: var63_out
        ignore_errors: yes
      - debug:
          var: var63_out
      - name: Printinfo
        local_action: shell echo "Ensure ldap client is not enabled,Yes" >> file
        when: var63_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ldap client is not enabled,No" >> file
        when: var63_out.rc != 0   


      - name: Ensure IP forwarding is disabled
        shell: 'grep -E "net.ipv4.ip_forward=0" /etc/sysctl.conf'
        register: var64_out
        ignore_errors: yes
      - debug:
          var: var64_out
      - name: Printinfo
        local_action: shell echo "Ensure IP forwarding is disabled,Yes" >> file
        when: var64_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure IP forwarding is disabled,No" >> file
        when: var64_out.rc != 0      


      - name: Ensure packet redirect sending is disabled
        shell: 'grep -E "net.ipv4.conf.all.send_redirects=0|net.ipv4.conf.default.send_redirects=0" /etc/sysctl.conf'
        register: var65_out
        ignore_errors: yes
      - debug:
          var: var65_out
      - name: Printinfo
        local_action: shell echo "Ensure packet redirect sending is disabled,Yes" >> file
        when: var65_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure packet redirect sending is disabled,No" >> file
        when: var65_out.rc != 0 

      - name: Ensure source routed packets are not accepted
        shell: 'grep -E "net.ipv4.conf.all.accept_source_route=0|net.ipv4.conf.default.accept_source_route=0" /etc/sysctl.conf'
        register: var66_out
        ignore_errors: yes
      - debug:
          var: var66_out
      - name: Printinfo
        local_action: shell echo "Ensure source routed packets are not accepted,Yes" >> file
        when: var66_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure source routed packets are not accepted,No" >> file
        when: var66_out.rc != 0 

      - name: Ensure ICMP redirects are not accepted
        shell: 'grep -E "net.ipv4.conf.all.accept_redirects=0|net.ipv4.conf.default.accept_redirects=0" /etc/sysctl.conf'
        register: var67_out
        ignore_errors: yes
      - debug:
          var: var67_out
      - name: Printinfo
        local_action: shell echo "Ensure ICMP redirects are not accepted,Yes" >> file
        when: var67_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ICMP redirects are not accepted,No" >> file
        when: var67_out.rc != 0

      - name:  Ensure secure ICMP redirects are not accepted
        shell: 'grep -E "net.ipv4.conf.all.secure_redirects=0|net.ipv4.conf.default.secure_redirects=0" /etc/sysctl.conf'
        register: var68_out
        ignore_errors: yes
      - debug:
          var: var68_out
      - name: Printinfo
        local_action: shell echo "Ensure ICMP redirects are not accepted,Yes" >> file
        when: var68_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure ICMP redirects are not accepted,No" >> file
        when: var68_out.rc != 0

      - name:  Ensure suspicious packets are logged 
        shell: 'grep -E "net.ipv4.conf.all.log_martians=1|net.ipv4.conf.default.log_martians=1" /etc/sysctl.conf'
        register: var69_out
        ignore_errors: yes
      - debug:
          var: var69_out
      - name: Printinfo
        local_action: shell echo "Ensure suspicious packets are logged,Yes" >> file
        when: var69_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure suspicious packets are logged,No" >> file
        when: var69_out.rc != 0        

      - name: Ensure broadcast ICMP requests are ignored 
        shell: 'grep -E "net.ipv4.icmp_echo_ignore_broadcasts=1" /etc/sysctl.conf'
        register: var70_out
        ignore_errors: yes
      - debug:
          var: var70_out
      - name: Printinfo
        local_action: shell echo "Ensure broadcast ICMP requests are ignored,Yes" >> file
        when: var70_out.rc == 0
      - name: Printinfo
        local_action: shell echo "Ensure broadcast ICMP requests are ignored,No" >> file
        when: var70_out.rc != 0    
